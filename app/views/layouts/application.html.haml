!!!
%html
  %head
    = csrf_meta_tag
    = catch_js_errors
    %title= page_title
    %meta{ "http-equiv" => "Content-Type", content: "text/html; charset=utf-8" }
    %meta{ name: "viewport", content: "initial-scale=1.0" }
    :javascript
      window.pathways = window.pathways || {};
      window.pathways.environment = "#{Rails.env}";
      window.pathways.dataForReact = []
      window.pathways.dataForReact.push({
        app: {
          currentUser: #{Denormalized::CurrentUser.call(current_user: current_user).to_json}
        }
      });

    = stylesheet_link_tag "application", media: 'screen, print'
    /[if lte IE 7]
      = stylesheet_link_tag "ie.css", media: 'screen'
    /[if IE 7]
      = stylesheet_link_tag "font-awesome-ie7.css", media: 'screen, print'
    = stylesheet_link_tag "print", media: 'print'
    = javascript_include_tag "application"
    - cache("ie_compatibility_warning") do
      = render "layouts/ie_compatibility_warning"
    - if (Rails.env.development? || (ENV['APP_NAME'] != 'pathwaysbc')) && ENV["DEMO_SITE"] != "true"
      = render "shared/test_debugging_info"
    - if current_user.mask.present? && current_user.mask.persisted?
      = render "layouts/application/mask_warning"
    = yield(:head)

    :javascript
      $(document).ajaxError(function(event, jqXHR, ajaxSettings, thrownError) {
        Raven.captureMessage(thrownError || jqXHR.statusText, {
          extra: {
            type: ajaxSettings.type,
            url: ajaxSettings.url,
            data: ajaxSettings.data,
            status: jqXHR.status,
            error: thrownError || jqXHR.statusText,
            response: jqXHR.responseText.substring(0, 100)
          }
        });
      });
      $(document).ready(function() {
        if ($(window).width() <= 480) {
          $('meta[name=viewport]').attr(
            'content','initial-scale=1.0, user-scalable=no'
          );
        }
        $('body').data('GLOBAL_USER_TYPE', #{current_user.adjusted_type_mask});
      });

    :javascript
      window.pathways.loadGlobalData(#{localstorage_cache_version})

    = render "partials/analytics_setup"

  %body{ id: "#{params[:controller]}_page" }
    - if @layout_heartbeat_loader
      #heartbeat-loader-position
        .heartbeat-loader
          Loadingâ€¦
    #main-nav.navbar
      .navbar-inner
        .container

          %a.btn.btn-navbar{ data: { toggle: "collapse",
            target: ".nav-collapse" } }
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar

          %a#logo.brand{ href: home_path }

          - if logged_in? && !current_user.as_introspective?
            %form.navbar-search.pull-right#livesearch{ onSubmit: "event.preventDefault()" }
              #react_root--search
                %input.span3.search-query#search.icon{ type: "search",
                  autocomplete: "off",
                  placeholder: "&#xf002; Search".html_safe }
              #navbar_search--results

          .nav-collapse
            - if logged_in?

              %ul.nav.pull-right

                %li.dropdown.visible-desktop
                  %a{ href: home_path } Home

                - if current_user.as_admin_or_super?

                  %li.dropdown.admin
                    %a.dropdown-toggle{ href: "#",
                       data: { toggle: "dropdown" } }
                      = "Admin"
                      - pending_reviews = ReviewItem.active.select{ |review| (review.item.present? && (review.item.divisions & as_administering).present?) }
                      - pending_user_review_count = pending_reviews.select{ |review| review.item.owners.include? current_user }.count
                      - pending_feedback = FeedbackItem.active.select{ |item| (item.owner_divisions & as_administering).any? }
                      - pending_user_feedback_count = pending_feedback.select{ |item| item.owners.include?(current_user) }.count

                      - if pending_reviews.count + pending_feedback.count > 0
                        %span.badge{ class: ((pending_user_review_count + pending_user_feedback_count) > 0) && "badge-warning" }
                          #{pending_user_review_count + pending_user_feedback_count}/#{pending_reviews.count + pending_feedback.count}
                      %b.caret

                    %ul.dropdown-menu
                      - if current_user.as_super_admin?
                        %li= link_to "Activity Feed",
                          versions_path,
                          class: "history"
                      %li
                        - if pending_reviews.count > 0
                          = link_to review_items_path,
                            class: "review" do
                            Review Queue
                            %span.badge{ class: pending_user_review_count > 0 ? "badge-warning" : "" }
                              = "#{pending_user_review_count}/#{pending_reviews.count}".html_safe
                        - else
                          = link_to "Review Queue",
                            review_items_path,
                            class: "review"
                      %li
                        - if pending_feedback.count > 0
                          = link_to feedback_items_path,
                            class: "feedback" do
                            Feedback Queue
                            %span.badge{ class: pending_user_feedback_count > 0 ? "badge-warning" : "" }
                              = "#{pending_user_feedback_count}/#{pending_feedback.count}"
                        - else
                          = link_to "Feedback Queue",
                            feedback_items_path,
                            class: "feedback"
                      - if current_user.as_super_admin? || current_user.as_admin_or_super?
                        %li= link_to "Manage Notifications",
                          subscriptions_path,
                          class: "subscriptions"
                      - if current_user.as_super_admin? || current_user.as_admin_or_super?
                        %li= link_to "Reports", reports_path, class: "reports"
                      - if can? :index, Issue
                        %li= link_to "Issues", issues_path, class: "issues_link"

                      %li.divider
                      %li.nav-header Pathways
                      %li
                        = link_to "New...",
                          "#",
                          class: "create arrow-right-after"
                        %ul.dropdown-menu
                          - if can? :create, Procedure
                            %li
                              = link_to "New Area of Practice in...",
                                "#",
                                class: "arrow-right-after"
                              %ul.dropdown-menu.sub-menu
                                - @layout_specializations.each do |specialization|
                                  %li= link_to specialization[:name],
                                    new_specialization_procedure_path(specialization[:id])
                          - if can? :create, City
                            %li= link_to "New City", new_city_path
                          - if can? :create, Clinic
                            %li
                              = link_to "New Clinic in...",
                                "#",
                                class: "arrow-right-after"
                              %ul.dropdown-menu
                                - @layout_specializations.each do |specialization|
                                  %li= link_to specialization[:name],
                                    new_specialization_clinic_path(specialization[:id])
                          - if can? :create, Division
                            %li= link_to "New Division", new_division_path
                          - if can? :create, HealthcareProvider
                            %li= link_to "New Healthcare Provider",
                              new_healthcare_provider_path
                          - if can? :create, Hospital
                            %li= link_to "New Hospital", new_hospital_path
                          - if can? :create, Language
                            %li= link_to "New Language", new_language_path
                          - if can? :create, NewsItem
                            %li= link_to "New News Item", new_news_item_path
                          - if can? :create, Office
                            %li= link_to "New Office", new_office_path
                          - if can? :create, Specialist
                            %li
                              = link_to "New Specialist in...",
                                "#",
                                class: "arrow-right-after"
                              %ul.dropdown-menu
                                - @layout_specializations.each do |specialization|
                                  %li= link_to specialization[:name],
                                    new_specialization_specialist_path(specialization[:id])
                          - if can? :create, Specialization
                            %li= link_to "New Specialty",
                              new_specialization_path
                          - if can? :create, User
                            %li= link_to "New User", new_user_path
                            - if current_user.as_super_admin?
                              %li= link_to "Bulk Create Users",
                                upload_users_path
                      - if can? :index, Procedure
                        %li
                          = link_to "Areas of Practice in...",
                            "#",
                            class: "arrow-right-after"
                          %ul.dropdown-menu.sub-menu
                            %li= link_to "All Specialties", procedures_path
                            - @layout_specializations.each do |specialization|
                              %li= link_to specialization[:name],
                                specialization_procedures_path(specialization[:id])
                      - if can? :index, City
                        %li= link_to "Cities", cities_path
                      - if can? :index, Clinic
                        %li
                          = link_to "Clinics", "#", class: "arrow-right-after"
                          %ul.dropdown-menu
                            %li= link_to "All Clinics", clinics_path
                            %li
                              = link_to "Hidden Clinics",
                                clinics_path(hidden: true)
                            %li
                              = link_to "Requiring telehealth review",
                                clinics_path(teleservices_require_review: true)
                            - @layout_specializations.each do |specialization|
                              %li= link_to "#{specialization[:name]} Clinics",
                                specialization_clinics_path(specialization[:id]),
                                class: 'division'
                      - if can? :index, Division
                        %li= link_to "Divisions", divisions_path
                      - elsif current_user.as_admin_or_super?
                        - if current_user.as_divisions.length == 1
                          %li= link_to "Division",
                            division_path(current_user.as_divisions.first)
                        - else
                          %li
                            = link_to "Divisions",
                              "#",
                              class: "arrow-right-after"
                            %ul.dropdown-menu.sub-menu
                              - current_user.as_divisions.each do |division|
                                %li= link_to division.name,
                                  division_path(division)
                      - if can? :index, HealthcareProvider
                        %li= link_to "Healthcare Providers",
                          healthcare_providers_path
                      - if can? :index, Hospital
                        %li= link_to "Hospitals", hospitals_path
                      - if can? :index, Language
                        %li= link_to "Languages", languages_path
                      - if can?(:index, NewsItem) && as_administering.count == 1
                        %li= link_to "News Items", news_items_path
                      - if can?(:index, NewsItem) && as_administering.count > 1
                        %li
                          = link_to "News Items",
                            news_items_path(division_id: current_user.as_divisions.first.id),
                            class: "arrow-right-after"
                          %ul.dropdown-menu
                            - as_administering.each do |division|
                              %li= link_to division.name,
                                news_items_path(division_id: division.id),
                                class: 'office'
                      - if can? :index, Office
                        %li
                          = link_to "Offices", "#", class: "arrow-right-after"
                          %ul.dropdown-menu
                            %li= link_to "All Offices", offices_path
                            - (current_user.as_super_admin? ? City.all : current_user.as_divisions.map(&:cities).flatten.uniq).each do |city|
                              %li= link_to "#{city.name} Offices",
                                city_offices_path(city),
                                class: 'office'
                      - if can? :index, Province
                        %li= link_to "Provinces", provinces_path
                      - if can? :index, Specialist
                        %li
                          = link_to "Specialists",
                            "#",
                            class: "arrow-right-after"
                          %ul.dropdown-menu
                            %li= link_to "All Specialists", specialists_path
                            %li
                              = link_to "Hidden Specialists",
                                specialists_path(hidden: true)
                            %li
                              = link_to "Requiring telehealth review",
                                specialists_path(teleservices_require_review: true)
                            - @layout_specializations.each do |specialization|
                              %li= link_to specialization[:member_name].pluralize,
                                specialization_specialists_path(specialization[:id]),
                                class: 'division'
                      - if can? :index, Specialization
                        %li= link_to "Specialties", specializations_path
                      - if can? :index, User
                        %li
                          = link_to "Users", "#", class: "arrow-right-after"
                          %ul.dropdown-menu
                            %li= link_to "All Users", users_path
                            - Division.all.each do |division|
                              %li= link_to "#{division.name} Users",
                                division_users_path(division),
                                class: 'division'
                      %li.divider
                      %li.nav-header Content Management
                      %li
                        = link_to "New...",
                          "#",
                          class: "create arrow-right-after"
                        %ul.dropdown-menu
                          - if can? :create, ScCategory
                            %li= link_to "New Content Category",
                              new_sc_category_path
                          - if can? :create, ScItem
                            %li= link_to "New Content Item", new_sc_item_path
                          - if can? :create, Faq
                            %li= link_to "New Faq", new_faq_path
                          - if can? :create, Newsletter
                            %li= link_to "New Newsletter", new_newsletter_path
                          - if can? :create, Video
                            %li= link_to "New Video", new_video_path
                      - if can? :read, ScCategory
                        %li= link_to "Content Categories",
                          sc_categories_path,
                          class: "sc_category"
                      - if can? :index, Evidence
                        %li= link_to "Levels Of Evidence", evidences_path
                      - if can? :index, Newsletter
                        %li= link_to "Newsletters", newsletters_path
                      - if can? :index, Video
                        %li= link_to "Videos", videos_path
                      - if can? :read, ScItem
                        - if current_user.as_super_admin? && Division.all.length > 1
                          %li
                            = link_to "Content Items Owned By...",
                              "#",
                              class: "create arrow-right-after"
                            %ul.dropdown-menu
                              - Division.all.each do |division|
                                %li= link_to "#{division.name}",
                                  division_content_items_path(division),
                                  class: "sc_item"
                          %li
                            = link_to "Content Items Borrowable By...",
                              "#",
                              class: "create arrow-right-after"
                            %ul.dropdown-menu
                              - Division.all.each do |division|
                                %li= link_to "#{division.name}",
                                  borrowable_content_items_path(division),
                                  class: "sc_item"
                        - elsif as_administering.length > 1
                          %li
                            = link_to "Content Items Owned By...",
                              "#",
                              class: "create arrow-right-after"
                            %ul.dropdown-menu
                              - as_administering.each do |division|
                                %li= link_to "#{division.name}",
                                  division_content_items_path(division),
                                  class: "sc_item"
                          %li
                            = link_to "Content Items Borrowable By...",
                              "#",
                              class: "create arrow-right-after"
                            %ul.dropdown-menu
                              - as_administering.each do |division|
                                %li= link_to "#{division.name}",
                                  borrowable_content_items_path(division),
                                  class: "sc_item"
                        - else
                          %li= link_to "Owned Content Items",
                            division_content_items_path(as_administering.first),
                            class: "sc_item"
                          - if Division.all.length > 1
                            %li= link_to "Manage Borrowed Content Items",
                              borrowable_content_items_path(as_administering.first),
                              class: "sc_item"
                      - if can? :update_demoable, ScItem
                        %li= link_to "Edit Demoable Content Items",
                          edit_demoable_content_items_path

                - unless current_user.as_introspective?
                  - cache("resources_dropdown_categories_#{current_user.as_divisions.map{|d| d.id}.join('_')}") do
                    - dropdown_categories = ScCategory.global_resources_dropdown(current_user.as_divisions)
                    - if dropdown_categories.present?
                      %li.dropdown
                        %a.dropdown-toggle{ href: "#",
                          data: { toggle: "dropdown" } }
                          %i.icon-book
                          Resources
                          %b.caret
                        %ul.dropdown-menu
                          - dropdown_categories.each do |category|
                            %li= link_to category.name, category

                  %li.dropdown
                    %a.dropdown-toggle{ href: "#",
                      data: { toggle: "dropdown" } }
                      %i.icon-edit
                      Forms
                      %b.caret

                    %ul#forms_dropdown.dropdown-menu

                      %li= link_to 'General forms', '/content_categories/9'
                      %li= link_to 'Referral forms', referral_forms_path

                  %li.dropdown
                    %a.dropdown-toggle{ href: "#",
                      data: { toggle: "dropdown" } }
                      %i.icon-heart
                      Favourites
                      %b.caret

                    %ul#favorites_dropdown.dropdown-menu

                      %li#specialists_favorites.nav-header.specialist Specialists
                      - current_user.favorite_specialists.each do |s|
                        %li.favorite{ id: "specialists_#{s.id}" }
                          = link_to s.name, specialist_path(s)

                      %li#clinics_favorites.nav-header.clinic Clinics
                      - current_user.favorite_clinics.each do |c|
                        %li.favorite{ id: "clinics_#{c.id}" }
                          = link_to c.name, clinic_path(c)

                      %li#content_items_favorites.nav-header.clinic Content
                      - current_user.favorite_content_items.each do |c|
                        %li.favorite{ id: "content_items_#{c.id}" }
                          = link_to c.title,
                            "/content_items/#{c.id}",
                            target: "_blank",
                            onclick: "window.pathways.trackContentItem(_gaq, #{c.id})"

                      %li#add_favorites
                        %p
                          Add specialists, clinics, and content to this menu for
                          quick reference by viewing their full details and
                          pressing the
                          %i.icon-text.icon-heart
                          beside their name.

                      -if current_user.favorite_specialists.blank?
                        :javascript
                          $(document).ready(function() {
                            $('#specialists_favorites').hide();
                          });

                      -if current_user.favorite_clinics.blank?
                        :javascript
                          $(document).ready(function() {
                            $('#clinics_favorites').hide();
                          });

                      -if current_user.favorite_content_items.blank?
                        :javascript
                          $(document).ready(function() {
                            $('#content_items_favorites').hide();
                          });

                      -if current_user.favorites.present?
                        :javascript
                          $(document).ready(function() {
                            $('#add_favorites').hide();
                          });


                %li.dropdown
                  %a.dropdown-toggle{ href: "#", data: { toggle: "dropdown" } }
                    %i.icon-user
                    You
                    %b.caret
                  %ul.dropdown-menu
                    %li.nav-header.name= current_user.name

                    - if current_user.controlled_specialists.present?
                      %li.nav-header Your specialists
                      - current_user.controlled_specialists.each do |specialist|
                        %li= link_to specialist.name, specialist

                    - if current_user.controlled_clinics.present?
                      %li.nav-header Your clinics
                      - current_user.controlled_clinics.each do |clinic|
                        %li= link_to clinic.name, clinic

                    %li.nav-header Help
                    - if user_guide.present?
                      %li= link_to "User Guide",
                        user_guide.resolved_url,
                        class: 'user_guide_link',
                        target: "_blank",
                        onclick: "window.pathways.trackContentItem(_gaq, #{user_guide.id})"
                    %li= link_to "Training Videos",
                      videos_path,
                      class: 'videos_link'
                    %li= link_to "Help FAQ",
                      faq_category_path(FaqCategory.help),
                      class: 'faq_link'
                    %li
                      = link_to "Contact Us",
                        "javascript:void(0)",
                        onclick: open_feedback_modal

                    %li.nav-header Legal
                    %li= link_to "Privacy FAQ",
                      faq_category_path(FaqCategory.privacy),
                      class: 'faq_link'
                    %li= link_to "Terms of Use",
                      terms_and_conditions_path,
                      class: 'tac'

                    %li.nav-header Settings
                    - if current_user.as_admin_or_super?
                      %li= link_to "View Pathways as...",
                        new_user_mask_path,
                        class: "view_as"
                    %li= link_to "Change e-mail address",
                      (ENV["DEMO_SITE"] == "true" ? "#" : change_email_path),
                      class: 'change_email'
                    %li= link_to "Change password",
                      (ENV["DEMO_SITE"] == "true" ? "#" : change_password_path),
                      class: 'change_password'
                    %li= link_to "Logout",
                      logout_url,
                      class: 'logout'

    #body.container
      .row
        #content.span12
          #container
            - flash.each do |type, msg|
              .alert.alert-success= msg
            = yield

      - if show_contact_modal
        .row
          #email.content-wrapper
            = link_to "Contact Us",
              "javascript:void(0)",
              onclick: open_feedback_modal
    #loading
      #loading-spinner

    #react_root--feedback

    = yield(:javascript_footer)

    :javascript
      window.pathways.bootstrapReact()
