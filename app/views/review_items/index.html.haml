- set_page_specific_title "Review Queue"

.content-wrapper

  %h2 Review Queue

  - cuser = current_user
  - divisions = current_user_is_super_admin? ? Division.all : current_user_divisions

  - specialist_reviews = @review_items.reject{ |review_item| review_item.item.class != Specialist }
  - clinic_reviews = @review_items.reject{ |review_item| review_item.item.class != Clinic }

  - specialist_count        = specialist_reviews.length
  - clinic_count            = clinic_reviews.length
  - user_specialist_reviews = specialist_reviews.reject{ |review_item| !review_item.item.owners.include? cuser }.length
  - user_clinic_reviews     = clinic_reviews.reject{ |review_item| !review_item.item.owners.include? cuser }.length

  .tabbable
    %ul.nav.nav-tabs
      %li.active
        %a{"href" => "#specialists_tab", "data-toggle" => "tab"}
          Specialist Review Items
          - if user_specialist_reviews > 0
            %span.badge.badge-warning #{user_specialist_reviews}/#{specialist_count}
          - else
            %span.badge= specialist_count
      %li
        %a{"href" => "#clinics_tab", "data-toggle" => "tab"}
          Clinic Review Items
          - if user_clinic_reviews > 0
            %span.badge.badge-warning #{user_clinic_reviews}/#{clinic_count}
          - else
            %span.badge= clinic_count

    .tab-content
      #specialists_tab.tab-pane.active

        %table.table.table-condensed.table-striped
          %tr
            %th Specialist
            %th Assigned To
            %th From
            %th When
            %th Any Updates?
            %th

          - specialist_reviews.each do |review_item|
            %tr{:class => (review_item.item.owners.include? cuser) && "owned"}
              %td
                = link_to review_item.item.name, review_item.item, :class => 'ajax'
                %br
                #{review_item.item.specializations.map{ |s| s.name }.to_sentence} - #{review_item.item.cities.map{ |c| c.name }.to_sentence}
              %td
                - if review_item.item.owners.present?
                  %ul
                    - review_item.item.owners.each do |owner|
                      %li= owner.name
                - else
                  No owner
              %td= review_item.whodunnit.present? ? User.find(review_item.whodunnit).name : "Unknown"
              %td= "#{time_ago_in_words(review_item.created_at)} ago"
              %td= ReviewItem::STATUS_HASH[review_item.status]
              %td.admin
                = link_to("<i class='icon-pencil'></i>".html_safe + " Review changes", review_specialist_path(review_item.item), :class => "btn btn-mini ajax stacked-button")
                - if review_item.no_updates?
                  = link_to("<i class='icon-pencil'></i>".html_safe + " Archive", archive_specialist_path(review_item.item), :class => "btn btn-mini ajax stacked-button")
                = history_button(review_item)

      #clinics_tab.tab-pane

        %table.table.table-condensed.table-striped
          %tr
            %th Clinic
            %th Assigned To
            %th From
            %th When
            %th Any Updates?
            %th

          - clinic_reviews.each do |review_item|
            %tr{:class => (review_item.item.owners.include? cuser) && "owned"}
              %td
                = link_to review_item.item.name, review_item.item, :class => 'ajax'
                %br
                #{review_item.item.specializations.map{ |s| s.name }.to_sentence} - #{review_item.item.cities.map{ |c| c.name }.to_sentence}
              %td
                - if review_item.item.owners.present?
                  %ul
                    - review_item.item.owners.each do |owner|
                      %li= owner.name
                - else
                  No owner
              %td= review_item.whodunnit.present? ? User.find(review_item.whodunnit).name : "Unknown"
              %td= "#{time_ago_in_words(review_item.created_at)} ago"
              %td= ReviewItem::STATUS_HASH[review_item.status]
              %td.admin
                = link_to("<i class='icon-pencil'></i>".html_safe + " Review changes", review_clinic_path(review_item.item), :class => "btn btn-mini ajax stacked-button")
                - if review_item.no_updates?
                  = link_to("<i class='icon-pencil'></i>".html_safe + " Archive", archive_clinic_path(review_item.item), :class => "btn btn-mini ajax stacked-button")
                = history_button(review_item)

  .btn-group= link_to "View archived review queue items", archived_review_items_path, :class => 'btn ajax'
