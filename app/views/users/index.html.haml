- set_page_specific_title "Users"

.content-wrapper
  %h2
    - if @division.present?
      #{@division.name} Users
    - else
      Users

  .tabbable
    %ul.nav.nav-tabs
      - if (current_user_is_super_admin?)
        %li.active
          %a{"href" => "#super_admin_tab", "data-toggle" => "tab"}= "Super Administrators"
      %li{:class => !current_user_is_super_admin? && "active"}
        %a{"href" => "#admin_tab", "data-toggle" => "tab"}= "Administrators"
      %li
        %a{"href" => "#user_tab", "data-toggle" => "tab"}= "Users"
      %li
        %a{"href" => "#pending_user_tab", "data-toggle" => "tab"}= "Pending Accounts"
      %li
        %a{"href" => "#disabled_user_tab", "data-toggle" => "tab"}= "Inactive Accounts"

    .tab-content
      - if (current_user_is_super_admin?)
        #super_admin_tab.tab-pane.active

          %table.table.table-condensed.table-striped.tablesorter
            %thead
              %tr.tableheader
                %th{:class => "{sorter: 'text'}", :style => "width:15%"} Name
                %th{:class => "{sorter: 'text'}", :style => "width:15%"} Division(s)
                %th{:class => "{sorter: 'text'}", :style => "width:15%"} Signed Up
                %th{:class => "{sorter: 'text'}", :style => "width:15%"} Email
                %th{:class => "{sorter: 'text'}", :style => "width:40%"} Owns Specialties
                %th.admin

            %tbody
              - @super_admin_users.each do |user|
                %tr
                  %td= link_to user.name, user, :class => 'ajax'
                  %td= user.divisions.map{ |s| s.name }.to_sentence
                  %td= user.activated_at.present? ? user.activated_at.strftime("%Y-%m-%d") : user.created_at.strftime("%Y-%m-%d")
                  %td= user.email
                  %td
                    - divisions = @division.present? ? [@division] : user.divisions
                    - divisions.each do |division|
                      - specialization_options = user.specialization_options.for_divisions([division]).reject{ |so| so.specialization.blank? }
                      - if specialization_options.present?
                        %ul
                          Specializations owned in #{division.name}
                          - specialization_options.each do |so|
                            %li= link_to so.specialization.name, so.specialization, :class => 'ajax'

                  = render "users/admin_column", user: user
          %h4
            Total
            = render partial: "division_label"
            Super Administrators:
            = @super_admin_users.count

      #admin_tab.tab-pane{:class => !current_user_is_super_admin? && "active"}
        %table.table.table-condensed.table-striped.tablesorter
          %thead
            %tr.tableheader
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Name
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Division(s)
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Signed Up
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Email
              %th{:class => "{sorter: 'text'}", :style => "width:40%"} Owns Specialties
              %th.admin

          %tbody
            - @admin_users.each do |user|
              %tr
                %td= link_to user.name, user, :class => 'ajax'
                %td= user.divisions.map{ |s| s.name }.to_sentence
                %td= user.activated_at.present? ? user.activated_at.strftime("%Y-%m-%d") : user.created_at.strftime("%Y-%m-%d")
                %td= user.email
                %td
                  - user.divisions.each do |division|
                    - specialization_options = user.specialization_options.for_divisions([division]).reject{ |so| so.specialization.blank? }
                    - if specialization_options.present?
                      %ul
                        Specializations owned in #{division.name}
                        - specialization_options.each do |so|
                          %li= link_to so.specialization.name, so.specialization, :class => 'ajax'
                = render "users/admin_column", user: user
        %h4
          Total
          = render partial: "division_label"
          Administrators:
          = @admin_users.count
      #user_tab.tab-pane
        %table.table.table-condensed.table-striped.tablesorter
          %thead
            %tr.tableheader
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Name
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Division(s)
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Signed Up
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Type
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Email
              -#%th{:class => "{sorter: 'text'}", :style => "width:25%"} Can edit
              %th.admin

          %tbody
            - @users.each do |user|
              %tr
                %td= link_to user.name, user, :class => 'ajax'
                %td= user.divisions.map{ |s| s.name }.to_sentence
                %td= user.activated_at.present? ? user.activated_at.strftime("%Y-%m-%d") : user.created_at.strftime("%Y-%m-%d")
                %td= user.type
                %td= user.email
                -#%td
                  %ul
                    - user.controlled_specialist_offices.each do |specialist_office|
                      - next if specialist_office.office.blank?
                      %li= "#{specialist_office.specialist.name} - #{specialist_office.office.short_address}"
                    - user.controlled_clinics.each do |clinic|
                      %li= clinic.name
                = render "users/admin_column", user: user
        %h4
          Total
          = render partial: "division_label"
          Users:
          = @users.count

      #pending_user_tab.tab-pane
        %table.table.table-condensed.table-striped.tablesorter
          %thead
            %tr.tableheader
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Name
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Date created
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Division(s)
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Role
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Type
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Access key
              %th.admin

          %tbody
            - @pending_users.each do |user|
              %tr
                %td= link_to user.name, user, :class => 'ajax'
                %td= user.created_at.strftime("%Y-%m-%d")
                %td= user.divisions.map{ |s| s.name }.to_sentence
                %td= user.role_full
                %td= user.admin? ? "Admin" : user.type
                %td= user.token
                = render "users/admin_column", user: user
        %h4
          Total
          = render partial: "division_label"
          Pending Users:
          = @pending_users.count

      #disabled_user_tab.tab-pane
        %table.table.table-condensed.table-striped.tablesorter
          %thead
            %tr.tableheader
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Name
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Division(s)
              %th{:class => "{sorter: 'text'}", :style => "width:20%"} Signed Up
              %th{:class => "{sorter: 'text'}", :style => "width:10%"} Role
              %th{:class => "{sorter: 'text'}", :style => "width:10%"} Type
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Email
              %th{:class => "{sorter: 'text'}", :style => "width:15%"} Access key
              %th.admin

          %tbody
            - has_user = false
            - @inactive_users.each do |user|
              - has_user = true
              %tr
                %td= link_to user.name, user, :class => 'ajax'
                %td= user.divisions.map{ |s| s.name }.to_sentence
                %td= user.activated_at.present? ? user.activated_at.strftime("%Y-%m-%d") : user.created_at.strftime("%Y-%m-%d")
                %td= user.role_full
                %td= user.admin? ? "Admin" : user.type
                %td= user.email
                %td= user.pending? ? user.token : "Was activated"
                = render "users/admin_column", user: user
            - if !has_user
              %tr
                %td
                %td
                %td
                %td
                %td
                %td
                %td
                %td
                %td
        %h4
          Total
          = render partial: "division_label"
          Inactive Users:
          = @inactive_users.count

      %script{"type" => "text/javascript"}
        :plain
          $(document).ready(function() { $('.tablesorter').tablesorter({sortList: [[0,0]]}) });
  %br
  %p.admin= link_to("<i class='icon-plus-sign'></i>".html_safe + " New User", new_user_path, :class => "btn ajax")
