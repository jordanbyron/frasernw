- set_page_specific_title "Entity Statistics"

.content-wrapper

  %h2 Entity Statistics
  %p.no_indent= "Reporting for #{@report_scope}"
  %p.no_indent
    = "Generated on #{Time.now.strftime('%A %B %d')} at "
    = Time.now.strftime('%I:%M %p')

  - if @divisions.length == 1
    - specialists = Specialist.in_divisions(@divisions)
    - clinics = Clinic.in_divisions(@divisions)
    - procedures = []
    - [specialists + clinics].flatten.each{ |s| procedures.concat( s.procedures ) }
    - procedures.uniq!
    - specializations = Specialization.all.reject do |s|
      - [s.specialists.in_divisions(@divisions) + s.clinics.in_divisions(@divisions)].flatten.length == 0
    - hospitals = Hospital.in_divisions(@divisions)
    - sc_categories = ScCategory.all_parents
    - sc_items = ScItem.all_in_divisions(@divisions)
    - news_items = NewsItem.in_divisions(@divisions)
  - else
    - specialists = Specialist.all
    - clinics = Clinic.all
    - procedures = Procedure.all
    - specializations = Specialization.all
    - hospitals = Hospital.all
    - sc_categories = ScCategory.all_parents
    - sc_items = ScItem.all
    - news_items = NewsItem.all

  %table#stats.table

    %tr
      %th
      %th Total
    %tr
      %th Specialties
      %td= specializations.length
    %tr
      %th

    %tr
      %th
      %th Total Focused & Non Focused
      %th Focused
      %th Non Focused
      %th Assumed for Specialists
      %th Assumed for Clinics
    %tr
      %th Areas of practice
      %td= procedures.length
      %td= procedures.reject{ |p| !p.procedure_specializations.first.try(:focused?) }.length
      %td= procedures.reject{ |p| !p.procedure_specializations.first.try(:nonfocused?) }.length
      %td= Procedure.all.reject{ |p| !p.procedure_specializations.first.try(:assumed_specialist?) }.length
      %td= Procedure.all.reject{ |p| !p.procedure_specializations.first.try(:assumed_clinic?) }.length
    %tr
      %th

    %tr
      %th
      %th Total
      %th Completed Survey
      %th Not Completed Survey
      %th Purposely Not Yet Surveyed
      %th Hospital/Clinic Only
      %th Moved Away
      %th Retired
    %tr
      %th Specialists
      %td= specialists.length
      %td= specialists.select{ |s| s.responded_to_survey? }.length
      %td= specialists.select{ |s| s.surveyed && !s.responded_to_survey? }.length
      %td= specialists.reject{ |s| !s.surveyed? }.length
      %td= specialists.select{ |s| s.available? && !s.has_offices? }.length
      %td= specialists.reject{ |s| !s.moved_away? }.length
      %td= specialists.reject{ |s| !s.retired? }.length
    %tr
      %th

    %tr
      %th
      %th Total
      %th Completed Survey
      %th Not Completed Survey
      %th Purposely Not Yet Surveyed
    %tr
      %th Clinics
      %td= clinics.length
      %td= clinics.select{ |s| s.responded_to_survey? }.length
      %td= clinics.select{ |s| s.surveyed && !s.responded_to_survey? }.length
      %td= clinics.reject{ |s| !s.surveyed? }.length
    %tr
      %th

    %tr
      %th
      %th Total
    %tr
      %th Hospitals
      %td= hospitals.length
    %tr
      %th

    %tr
      %th
      %th Total
    %tr
      %th Resources
      %td= sc_items.count
    %tr
      %th

    %tr
      %th
      %th Total
    %tr
      %th News Items
      %td= news_items.count
    %tr
      %th

    %tr
      %th
        %h3
          = "Specialists by Specialty"
          %br
    %tr
      %th
    - specializations.each do |specialization|
      - @specialization_specialists = specialization.specialists & specialists
      %tr
        %th
        %th Total
        %th Completed Survey
        %th Not Completed Survey
        %th Purposely Not Yet Surveyed
        %th Hospital/Clinic Only
        %th Moved Away
        %th Retired
      %tr
        %th= specialization.name
        %td= @specialization_specialists.length
        %td= @specialization_specialists.select{ |s| s.responded_to_survey? }.length
        %td= @specialization_specialists.select{ |s| s.surveyed && !s.responded_to_survey? }.length
        %td= @specialization_specialists.reject{ |s| !s.surveyed? }.length
        %td= @specialization_specialists.select{ |s| s.available? && !s.has_offices? }.length
        %td= @specialization_specialists.reject{ |s| !s.moved_away? }.length
        %td= @specialization_specialists.reject{ |s| !s.retired? }.length
      %th
    %tr
      %th

    %tr
      %th
        %h3
          = "Resources / Content Items"
          %br
    - sc_categories.each do |sc_category|
      %tr
        %th
        %th Total
      %tr
        %th= sc_category.name
        %td
          = (sc_category.sc_items & sc_items).count + sc_category.children.inject(0) do |result, sc_category_child|
            - result + (sc_category_child.sc_items & sc_items).count
        %tr
      %th
