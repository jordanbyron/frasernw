- set_page_specific_title "#{@specialist.name}"

%ul#specialties-menu
  %li.dropdown
    %a.specialties-dropdown-toggle{href: "javascript:void(0)"}
      %span= "All Specialties"
      %b.caret
  %li.subsequent{class: (@header_specialization.in_progress?(current_user.as_divisions) && "in-progress")}
    = link_to @header_specialization.name,
      specialization_path(@header_specialization),
      class: 'ajax'
    - if specialization.new_for_divisions(current_user.as_divisions)
      %span.new= "new"

= render 'partials/specialization_dropdown_menu'

= render 'partials/specialization_nav',
  specialization: specialization,
  selected: 'specialists'

- specialist_offices = @specialist.specialist_offices.order(:created_at).reject(&:empty?)
- has_office = specialist_offices.length > 0

.content-wrapper

  - if @is_version
    = render 'versions/info', instance_name: "specialist"

  - cache(specialist_path(@specialist)) do
    - show_details = false
    - show_clinic_details = false
    - show_areas_of_practice = false

    .content
      .row
        = render "specialists/inner"
    #feedback
      .inner
        = simple_form_for @feedback,
          html: { class: "ajax feedback_form" } do |f|
          = f.input :feedback,
            label: "Please provide us with any updates to #{@specialist.name}'s information"
          = f.input :item_type,
            as: :hidden,
            value: "Specialist"
          = f.input :item_id,
            as: :hidden,
            value: @specialist.id

          .form-actions
            = link_to "javascript:void(0)",
              id: "sendFeedbackButton",
              onClick: "send_feedback($('form.feedback_form'))",
              class: "btn btn-primary" do
              .before-click
                Send Feedback
              .after-click.hidden
                Sending
            = link_to "Cancel",
              "javascript:void(0)",
              onClick: "$('#feedback').fadeOut(200)"

    #feedback_thanks
      .inner
        %h2= "Thank you!"

        %p.space.no_indent
          = "Thank you for providing your feedback  on #{@specialist.name}." +              |
            "Your contributions help make Pathways a valuable resource for the community."  |

        %p.space.no_indent
          = "We will review your feedback in the near future and take action as necessary."

        %p.space.no_indent
          = link_to "Close",
            "javascript:void(0)",
            onClick: "$('#feedback_thanks').fadeOut(200)"

    :javascript
      $(document).ready(function() {
        $('.tt').tooltip({trigger: 'manual'});
        $('#user_favorite_specialists_#{@specialist.id}')
          .addClass('#{@favorite_icon_class}');
      });

      function send_feedback(form) {
        $("#sendFeedbackButton").addClass('disabled');
        $('.before-click').addClass('hidden');
        $('.after-click').removeClass('hidden');
        $.ajax({
            url: form.attr('action'),
            data: form.serialize(),
            type: 'POST'
        }).success(function(json) {
            $("#sendFeedbackButton").removeClass('disabled');
            $('.after-click').addClass('hidden');
            $('.before-click').removeClass('hidden');
            $('#feedback').fadeOut(200);
            $('#feedback_item_feedback').val('')
            $('#feedback_thanks').fadeIn(200);
        });
      }

  - if current_user.as_admin_or_super?
    - if @specialist.user_controls_specialists.any?
      %h6= "Users that can edit this specialist"
      %ul
        - @specialist.user_controls_specialists.each do |control|
          %li
            = link_to control.user.name,
              control.user,
              class: (!control.user.active && "in-progress")
            - if !control.last_visited.nil?
              %span= "(Last Visited #{control.last_visited.strftime("%B %-d, %Y")}.)"
            - if !control.user.active
              %span= "(inactive)"

    %h6= "Review Queue Updates"
    %ul
      - if @specialist.review_items.any?
        - @specialist.review_items.sort_by(&:created_at).each do |review_item|
          %li
            = review_item.created_at.strftime('%B %d, %Y')
            - if review_item.no_updates?
              = "(#{ReviewItem::STATUS_HASH[review_item.status]})"
            - elsif review_item.archived?
              - if review_item.base_object.present?
                = link_to '(Re-review)',
                  rereview_specialist_path(review_item.item, review_item_id: review_item.id)
            - else
              = link_to '(Review)',
                review_specialist_path(review_item.item, review_item_id: review_item.id)
      - else
        %li= "None"

  .btn-group
    - if @specialist.available? && @specialist.locations.any?
      - # TODO: replace with Dan's work
      - if specialist_offices.one?
        %a.btn{"href" => specialist_patient_information_path(@specialist), "target" => "_blank"}
          %i.icon-print.icon-text
          Print Information for Patient
      - else
        %a.btn.dropdown-toggle{"href" => "#", "data-toggle" => "dropdown"}
          %i.icon-print.icon-text
          Print Information for Patient
          %span.caret
        %ul.dropdown-menu
          - specialist_offices.each do |specialist_office|
            - next if specialist_office.office.blank?
            %li
              %a{"href" => specialist_patient_information_office_path(@specialist, specialist_office), "target" => "_blank"}
                = specialist_office.office.short_address

    - if !current_user.as_admin_or_super? && can?(:update, @specialist)
      = link_to specialist_self_edit_path(@specialist, @specialist.token),
        class: "btn btn-primary ajax" do
        %i.icon-pencil.icon-white
        %span= "Update #{@specialist.name}'s information"
    - else
      = link_to "javascript:void(0)",
        class: "btn",
        onClick: "$('#feedback').fadeIn(200)" do
        %i.icon-bullhorn.icon-text
        %span= "Incorrect Information? Let us know"
    - if !current_user.as_admin_or_super? && can?(:update, @specialist)
      %a.btn.ajax{href: photo_specialist_path(@specialist)}
        %i.icon-picture.icon-white
        %span
          = "#{@specialist.photo.present? ? "Change" : "Add"} #{@specialist.name}'s photo"

  - if current_user.as_admin_or_super?

    %p.admin.btn-group

      - if @specialist.review_item.present?

        = link_to review_specialist_path(@specialist),
          class: "btn ajax" do
          %i.icon-list-alt
          %span= "Review Pending Changes"

      - elsif can? :update, @specialist

        = link_to edit_specialist_path(@specialist)
          class: "btn ajax" do
          %i.icon-pencil
          %span= "Edit Specialist"

        = link_to edit_referral_forms_path(parent_type: "Specialist", parent_id: @specialist.id),
          class: "btn ajax" do
          %i.icon-file
          %span= "Referral Forms"

        = link_to photo_specialist_path(@specialist),
          class: "btn ajax" do
          %i.icon-picture
          %span= "Photo"

        = link_to "javascript:void(0)",
          "data-toggle" => "collapse",
          "data-target" => "#share" do
          %i.icon-share
          %span= "Share"

        = large_history_button(@specialist)

        - if current_user.as_admin?
          = link_to "javascript:void(0)",
            "data-toggle" => "collapse",
            "data-target" => "#delete-specialist-msg" do
            %i.icon-trash
            %span= "Delete Specialist"

      - if can? :destroy, @specialist
        = link_to specialist_path(@specialist),
          { data: confirm: "Delete #{@specialist.name}?" },
          method: :delete,
          class: "btn" do
          %i.icon-trash
          %span= "Delete Specialist"

  - if current_user.as_admin_or_super?
    #share.collapse

    :javascript
      window.pathways.attachSecretEditLinks({
        containerId: "share",
        props: {
          addLink: '#{secret_tokens_path}',
          accessibleId: #{@specialist.id},
          accessibleType: "Specialist",
          currentUserName: "#{@current_user.name}",
          links: #{@specialist.valid_secret_edit_links(current_user).to_json},
          canEdit: #{can?(:edit, @specialist)},
          modal: { isVisible: false }
        }
      })

  - if can?(:update, @specialist) && current_user.as_admin?
    #delete-specialist-msg.collapse
      .alert.alert-info{style: "margin-top: 10px"}
        = "If you would like to have this specialist deleted, please contact a provincial administrator."
