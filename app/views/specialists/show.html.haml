- title "#{@specialist.name}"

- specialization = (current_user_is_admin? ? @specialist.specializations : @specialist.specializations.not_in_progress_for_divisions(current_user_divisions)).first || Specialization.not_in_progress_for_divisions(Division.all).first

- favorite_class = logged_in? ? (Favorite.find_by_user_id_and_favoritable_id_and_favoritable_type(current_user.id, @specialist.id, "Specialist").present? ? "icon-red" : "icon-text") : "icon-text"

%ul#specialties-menu
  %li.dropdown
    %a.specialties-dropdown-toggle{"href" => "javascript:void(0)"}
      All Specialties
      %b.caret
  %li.subsequent{:class => specialization.fully_in_progress_for_divisions(current_user_divisions) && "in-progress"}
    = link_to specialization.name, specialization_path(specialization), :class => 'ajax'
    = "<span class='new'>new</span>".html_safe if specialization.new_for_divisions(current_user_divisions)

= render 'partials/specialization_dropdown_menu'

= render 'partials/specialization_nav', :specialization => specialization, :selected => 'specialists'

- specialist_offices = @specialist.specialist_offices.order(:created_at).reject{ |specialist_office| specialist_office.empty? }
- has_office = specialist_offices.length > 0

.content-wrapper

  - if @is_version
    = render 'versions/info'

  - cache(specialist_path(@specialist)) do

    - show_details = false
    - show_areas_of_practice = false

    .content
      .row
        .span7half
          .headline-header
          .headline
            .specialist-image
              .image{:class => !@specialist.photo.present? && "empty"}
                - if @specialist.photo.present?
                  %img{"src" => @specialist.photo.url(:thumb)}
            %h2
              = @specialist.name
              %a{"href" => "javascript:void(0)", "onclick" => "favorite('specialists',#{@specialist.id},'#{escape_javascript(@specialist.name)}')", "title" => "Favourite / un-favourite"}
                %i.icon-heart{"id" => "user_favorite_specialists_#{@specialist.id}"}
            %h3.specialty_links
              - if @specialist.is_gp
                GP with a focus in
              - self_in_progress = @specialist.in_progress
              = @specialist.specializations.reject{ |s| !self_in_progress && s.fully_in_progress_for_divisions(@specialist.divisions) }.map{ |s| "<a href='#{specialization_path(s)}' class='#{ s.fully_in_progress_for_divisions(@specialist.divisions) ? "in-progress ajax" : "ajax" }'>#{s.name}</a>" }.to_sentence.html_safe
            - if @specialist.sex? && @specialist.billing_number_padded.present?
              %h5= " #{@specialist.sex}, MSP ##{@specialist.billing_number_padded}"
            - elsif @specialist.sex?
              %h5= @specialist.sex
            - elsif @specialist.billing_number_padded.present?
              %h5= "MSP ##{@specialist.billing_number_padded}"

            - if @specialist.not_responded?

              %p.space.no_indent This specialist has not yet provided Pathways their information.

            - elsif @specialist.moved_away?

              %p.space.no_indent This specialist has moved away.

            - elsif @specialist.retired?

              %p.space.no_indent This specialist has retired.

            - elsif @specialist.permanently_unavailable?

              %p.space.no_indent This specialist is no longer available.

            - elsif @specialist.purposely_not_yet_surveyed? || @specialist.hospital_or_clinic_only?

              - show_areas_of_practice = true

              - hospital_count = @specialist.hospitals.length
              - clinic_count = @specialist.clinics.reject{ |c| c.closed? }.length

              - if @specialist.purposely_not_yet_surveyed?

                %p.space.no_indent This specialist has purposely not yet been surveyed by Pathways. They may be out of our current catchment area, or in a speciality we have yet to fully survey.

              - elsif @specialist.hospital_or_clinic_only?

                - show_areas_of_practice = true

                %p.space.no_indent
                  %i{:class => @specialist.status_class}
                  - if hospital_count > 0 && clinic_count > 0
                    %strong This physician only works out of #{ hospital_count > 1 ? "hospitals" : "a hospital"} and #{ clinic_count > 1 ? "clinics" : "a clinic"}, and in general all referrals should be made through these locations.
                  - elsif clinic_count > 0
                    %strong This physician only works out of #{ clinic_count > 1 ? "clinics" : "a clinic"}, and in general all referrals should be made through #{ clinic_count > 1 ? "these clinics" : "this clinic"}.
                  - elsif hospital_count > 0
                    %strong This physician only works out of #{ hospital_count > 1 ? "hospitals" : "a hospital"}.
                  - else
                    %strong This physician only works out of hospitals and / or clinics, but we do not yet have data on which ones.

                - if @specialist.hospital_clinic_details.present?
                  %p.space.no_indent
                    %strong Details:
                    = @specialist.hospital_clinic_details

              - if hospital_count > 0
                %p.space.no_indent
                  %strong Hospital privileges:
                  != @specialist.hospitals.map{ |hospital| "<a href='#{hospital_path(hospital)}' class='ajax')\">#{hospital.name}</a>" }.to_sentence

              - if clinic_count > 0
                %p.space.no_indent
                  %strong Clinic associations:
                  != @specialist.clinics.reject{ |c| c.closed? }.map{ |clinic| "<a href='#{clinic_path(clinic)}' class='ajax'>#{clinic.name}</a>" }.to_sentence

            - elsif @specialist.hospital_or_clinic_referrals_only?

              - show_areas_of_practice = true
              - show_details = true

              - hospital_count = @specialist.hospitals.length
              - clinic_count = @specialist.clinics.reject{ |c| c.closed? }.length

              %p.space.no_indent
                %i{:class => @specialist.status_class}
                - if hospital_count > 0 && clinic_count > 0
                  %strong This physician only accepts referrals through #{ hospital_count > 1 ? "hospitals" : "a hospital"} and #{ clinic_count > 1 ? "clinics" : "a clinic"}, and in general all referrals should be made through these locations.
                - elsif clinic_count > 0
                  %strong This physician only accepts referrals through #{ clinic_count > 1 ? "clinics" : "a clinic"}, and in general all referrals should be made through #{ clinic_count > 1 ? "these clinics" : "this clinic"}.
                - elsif hospital_count > 0
                  %strong This physician only accepts referrals through #{ hospital_count > 1 ? "hospitals" : "a hospital"}.
                - else
                  %strong This physician only accepts referrals through hospitals and / or clinics, but we do not yet have data on which ones.

                - if has_office
                  %p.space.no_indent
                    This physician also sees their own patients for ongoing care at their #{ specialist_offices.length > 1 ? "offices" : "office"} listed below.


              - if @specialist.hospital_clinic_details.present?
                %p.space.no_indent
                  %strong Details:
                  = @specialist.hospital_clinic_details

            - else

              - show_details = true
              - show_areas_of_practice = true

              %p.no_indent.space
                %i{:class => @specialist.status_class}
                %strong.status= @specialist.status.end_with_period
              - if @specialist.status_details.present?
                %p.no_indent
                  %strong Details:
                  = @specialist.status_details.end_with_period.convert_newlines_to_br
              - if @specialist.practise_limitations.present?
                %p.no_indent
                  %strong Limitations:
                  = @specialist.practise_limitations.end_with_period.convert_newlines_to_br

          .headline-footer

          - if show_details

            - if has_office || @specialist.languages.present? || @specialist.interpreter_available

              %h6 Office Information

              - specialist_offices.each do |specialist_office|
                %p.space
                  %strong= specialist_office.phone_only if specialist_office.phone_only.present?
                %p= "Fax: #{specialist_office.fax}" if specialist_office.fax.present?
                %p= "Public e-mail (okay for patient use): #{mail_to specialist_office.public_email, specialist_office.public_email, :target => '_blank'}".html_safe if specialist_office.public_email.present?
                %p= "Private e-mail (for physician office use only): #{mail_to specialist_office.email, specialist_office.email, :target => '_blank'}".html_safe if specialist_office.email.present?
                %p= "Website: #{link_to specialist_office.url, specialist_office.url, :target => '_blank'}".html_safe if specialist_office.url.present?
                - if specialist_office.office.present?
                  - num_specialists = specialist_office.office.specialists.reject{ |s| s.not_available? }.count
                  - location = specialist_office.office.location
                  - next if !location
                  - address = location.resolved_address
                  - if location.in_hospital?
                    - located_in = location.hospital_in
                    %p
                      = "In #{link_to located_in.name, url_for(located_in), :class => 'ajax'}".html_safe
                      - if located_in.location.present? && located_in.location.in_hospital?
                        - hopsital = located_in.location.hospital_in
                        = "which is in #{link_to hopsital.name, hospital_path(hopsital), :class => 'ajax'}".html_safe
                      = "(#{specialist_office.sector})" if specialist_office.sector?
                      - if num_specialists > 1
                        with
                        %a.tt{"id" => "tt#{specialist_office.office.id}", "href" => "javascript:void(0)", "onclick" => "$('#tt#{specialist_office.office.id}').tooltip('toggle')", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| (s.id == @specialist.id) || s.not_available?}.map{|s| "<li>#{link_to "#{s.name} - #{s.specializations.map{ |sp| sp.name }.to_sentence}", specialist_path(s), :class => 'ajax'}</li>"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other')}"
                    %p= link_to address.address, address.map_url, :target => "_blank" if address.present? && !address.empty?
                    %p= location.in_details if location.in_details.present?
                  - elsif location.in_clinic?
                    - located_in = location.location_in.locatable
                    - clinic = located_in.clinic
                    %p
                      = "In #{link_to clinic.name, url_for(clinic), :class => 'ajax'}".html_safe
                      - if located_in.location.present? && located_in.location.in_hospital?
                        - hopsital = located_in.location.hospital_in
                        = "which is in #{link_to hopsital.name, hospital_path(hopsital), :class => 'ajax'}".html_safe
                      = "(#{specialist_office.sector})" if specialist_office.sector?
                      - if num_specialists > 1
                        with
                        %a.tt{"id" => "tt#{specialist_office.office.id}", "href" => "javascript:void(0)", "onclick" => "$('#tt#{specialist_office.office.id}').tooltip('toggle')", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| (s.id == @specialist.id) || s.not_available?}.map{|s| "<li>#{link_to "#{s.name} - #{s.specializations.map{ |sp| sp.name }.to_sentence}", specialist_path(s), :class => 'ajax'}</li>"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other')}"
                    %p= link_to address.address, address.map_url, :target => "_blank" if address.present? && !address.empty?
                    %p= location.in_details if location.in_details.present?
                  - elsif address.present?
                    %p
                      = link_to address.address, address.map_url, :target => "_blank"
                      = "(#{specialist_office.sector})" if specialist_office.sector?
                      - if num_specialists > 1
                        with
                        %a.tt{"id" => "tt#{specialist_office.office.id}", "href" => "javascript:void(0)", "onclick" => "$('#tt#{specialist_office.office.id}').tooltip('toggle')", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| (s.id == @specialist.id) || s.not_available?}.map{|s| "<li>#{link_to "#{s.name} - #{s.specializations.map{ |sp| sp.name }.to_sentence}", specialist_path(s), :class => 'ajax'}</li>"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other')}"
                - if specialist_office.location_opened.present?
                  %p
                    This practice opened at this location
                    = specialist_office.location_opened == "Prior to 2010" ? "prior to 2010." : "in #{specialist_office.location_opened}."
                - if specialist_office.direct_info.present?
                  %p
                    Direct number
                    %em for physician use only:
                    =specialist_office.direct_info
                - if specialist_office.open_saturday && specialist_office.open_sunday
                  %p Open Saturday and Sunday
                - elsif specialist_office.open_saturday
                  %p Open Saturday
                - elsif specialist_office.open_sunday
                  %p Open Sunday
                %p= "Phone lines open #{specialist_office.phone_schedule.collapsed_days_and_hours_and_breaks.to_sentence}" if specialist_office.phone_schedule.scheduled?

              - if @specialist.languages.present?
                %p.space
                  = @specialist.languages.map{ |x| "<a class='ajax' href='#{language_path(x)}'>#{x.name}</a>" }.to_sentence.html_safe
                  = "#{@specialist.languages.count == 1 ? 'is' : 'are' } spoken at this practice."

              - if @specialist.interpreter_available
                %p
                  Interpreter available upon request.

            - if !@specialist.hospital_or_clinic_referrals_only? && (@specialist.accepts_referrals_via.present? || @specialist.responds_via.present? || @specialist.referral_form_mask != 3 || @specialist.required_investigations.present? || @specialist.waittime.present? || @specialist.lagtime.present? || @specialist.patient_can_book_mask != 3)

              %h6 Referrals

              - if @specialist.accepts_referrals_via.present?
                %p
                  %strong Accepted by:
                  = @specialist.accepts_referrals_via.html_safe
              - if @specialist.responds_via.present?
                %p
                  %strong Responded to by:
                  = @specialist.responds_via

              - if @specialist.referral_form_mask == 1
                - referral_form_count = @specialist.referral_forms.reject{|referral_form| not referral_form.form.present?}.length
                %p
                  %strong Referral form:
                  Yes.
                %ul.referral_forms
                  - @specialist.referral_forms.each do |referral_form|
                    - next if not referral_form.form.present?
                    - type = referral_form.form_content_type.split('/').last
                    %li= link_to "#{referral_form.description} (#{type})", referral_form.form.url, :target => "_blank"
              - elsif @specialist.referral_form_mask == 2
                %p
                  %strong Referral form:
                  No.

              - if @specialist.required_investigations.present?
                %p.space
                  %strong Required information / investigations
                  for all referrals:
                  = @specialist.required_investigations.end_with_period.convert_newlines_to_br

              -if @specialist.waittime.present?
                %p.space
                  Average non-urgent patient wait time from referral to appointment:
                  %strong= @specialist.waittime

              -if @specialist.lagtime.present?
                %p
                  Average length of time to notify
                  = @specialist.responds_to
                  of a booking date:
                  %strong= @specialist.lagtime

              - @specialist.capacities.specialist_wait_time.each do |capacity|

                - if capacity.waittime.present? || capacity.lagtime.present?
                  %p.space
                    %strong= "#{capacity.procedure_specialization.procedure.full_name}:"

                  -if capacity.waittime.present?
                    %p
                      Average non-urgent patient wait time from referral to appointment:
                      %strong= capacity.waittime

                  -if capacity.lagtime.present?
                    %p
                      Average length of time to notify
                      = @specialist.responds_to
                      of a booking date:
                      %strong= capacity.lagtime

              - if @specialist.patient_can_book_mask == 1
                %p.space This office accepts direct calls from patients after referral to book their own appointments.
              - elsif @specialist.patient_can_book_mask == 2
                %p.space This office does not accept direct calls from patients after referral to book their own appointments.

            - if !@specialist.hospital_or_clinic_referrals_only? && (@specialist.red_flags.present? || @specialist.urgent_referrals_via.present?)
              %h6 Urgent Referrals

              - if @specialist.urgent_referrals_via.present?
                %p
                  %strong Accepted by:
                  = @specialist.urgent_referrals_via

              - if @specialist.red_flags.present?
                %p
                  %strong Red flags
                  that this office feels warrant urgent consultation:
                  = @specialist.red_flags.end_with_period.convert_newlines_to_br

            - if @specialist.patient_instructions.present? || @specialist.cancellation_policy.present?
              %h6 Patient Information

              -if @specialist.patient_instructions.present?
                %p.space
                  %strong Patient instructions:
                  = @specialist.patient_instructions.end_with_period.convert_newlines_to_br
              -if @specialist.cancellation_policy.present?
                %p.space
                  %strong Cancellation policy:
                  = @specialist.cancellation_policy.end_with_period.convert_newlines_to_br

            - clinics = @specialist.clinics.reject{ |c| c.closed? }
            - hospitals = @specialist.hospitals
            - if hospitals.present? || clinics.present?
              %h6 Associations

              - if hospitals.present?
                %p
                  %strong Hospital privileges:
                  != hospitals.map{ |hospital| "<a href='#{hospital_path(hospital)}' class='ajax')\">#{hospital.name}</a>" }.to_sentence

              - if clinics.present?
                %p
                  %strong Clinic associations:
                  != clinics.map{ |clinic| "<a href='#{clinic_path(clinic)}' class='ajax'}'>#{clinic.name}</a>" }.to_sentence

        - if show_details || show_areas_of_practice

          .span4.offsethalf

            - areas_of_practice_focused_results = {}
            - areas_of_practice_nonfocused_results = {}
            - specializations_with_results_count = 0
            - @specialist.specializations.each do |s|
              - areas_of_practice_focused_results[s.id] = compressed_procedures_indented(@specialist, ProcedureSpecialization::CLASSIFICATION_FOCUSED, s)
              - areas_of_practice_nonfocused_results[s.id] = compressed_procedures_indented(@specialist, ProcedureSpecialization::CLASSIFICATION_NONFOCUSED, s)
              - specializations_with_results_count += 1 if ((areas_of_practice_focused_results[s.id][1] > 0) || (areas_of_practice_nonfocused_results[s.id][1] > 0))

            - if specializations_with_results_count > 0 || @specialist.interest.present? || @specialist.not_performed.present?
              .well.areas-of-practice
                %h6 Accepts Referrals For

                - @specialist.specializations.each do |s|
                  - focused_procedures, focused_count, focused_has_investigations = areas_of_practice_focused_results[s.id]
                  - nonfocused_procedures, nonfocused_count, nonfocused_has_investigations = areas_of_practice_nonfocused_results[s.id]

                  - next if focused_count == 0 && nonfocused_count == 0

                  - if specializations_with_results_count > 1
                    %strong.investigation-name= s.name

                  .investigation.space
                    - if focused_count > 0
                      - if focused_has_investigations
                        %p (with any additional details)
                      .list{:class => specializations_with_results_count > 1 && "indent"}
                        = focused_procedures.html_safe
                    - if nonfocused_count > 0
                      %p.space
                        %em Other areas of interest
                      - if nonfocused_has_investigations
                        %p (with any additional details)
                      .list{:class => specializations_with_results_count > 1 && "indent"}
                        = nonfocused_procedures.html_safe

                - if @specialist.interest.present?
                  %p.space
                    %strong Most interested in
                  %p= @specialist.interest.end_with_period.convert_newlines_to_br

                - if @specialist.not_performed.present?
                  %p.space
                    %strong Does not see or do
                  %p= @specialist.not_performed.end_with_period.convert_newlines_to_br

    #feedback
      .inner
        = simple_form_for @feedback, :html => { :class => "ajax feedback_form" } do |f|

          = f.input :feedback, :label => "Please provide us with any updates to #{@specialist.name}'s information"
          = f.input :item_type, :as => :hidden, :value => "Specialist"
          = f.input :item_id, :as => :hidden, :value => @specialist.id

          .form-actions
            %a.btn.btn-primary{:id => "sendFeedbackButton", "href" => "javascript:void(0)", "onclick" => "send_feedback($('form.feedback_form'))" }
              .before-click
                Send Feedback
              .after-click.hidden
                Sending
            %a.btn.btn-danger{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeOut(200)"} Cancel

    #feedback_thanks
      .inner
        %h2 Thank you!

        %p.space.no_indent= "Thank you for providing your feedback  on #{@specialist.name}. Your contributions help make Pathways a valuable resource for the community."

        %p.space.no_indent We will review your feedback in the near future and take action as necessary.

        %p.space.no_indent
          %a.btn.btn-primary{"href" => "javascript:void(0)", "onclick" => "$('#feedback_thanks').fadeOut(200)" } Close

    %script{"type" => "text/javascript"}
      :plain
        $(document).ready(function() {
          $('.tt').tooltip({trigger: 'manual'});
          $('#user_favorite_specialists_#{@specialist.id}').addClass('#{favorite_class}');
        });

        function send_feedback(form) {
          $("#sendFeedbackButton").addClass('disabled');
          $('.before-click').addClass('hidden');
          $('.after-click').removeClass('hidden');
          $.ajax({
              url: form.attr('action'),
              data: form.serialize(),
              type: 'POST'
          }).success(function(json) {
              $("#sendFeedbackButton").removeClass('disabled');
              $('.after-click').addClass('hidden');
              $('.before-click').removeClass('hidden');
              $('#feedback').fadeOut(200);
              $('#feedback_item_feedback').val('')
              $('#feedback_thanks').fadeIn(200);
          });
        }

  - if current_user_is_admin?
    - controlling_users = @specialist.controlling_users.uniq
    - if controlling_users.present?
      %h6 Users that can edit this specialist
      %ul
        - controlling_users.each do |user|
          %li
            = link_to user.name, user, :class => !user.active && "in-progress"
            - if !user.active
              (inactive)

    %h6 Review Queue Updates
    - review_items = ReviewItem.for_specialist(@specialist)
    %ul
      - if review_items.present?
        - review_items.sort{|a,b| b.created_at <=> a.created_at}.each do |review_item|
          %li
            = review_item.created_at.strftime('%B %d, %Y')
            - if review_item.no_updates?
              = "(#{ReviewItem::STATUS_HASH[review_item.status]})"
            - elsif review_item.archived?
              - if review_item.base_object.present?
                = link_to '(Re-review)', rereview_specialist_path(review_item.item, review_item_id: review_item.id)
            - else
              = link_to '(Review)', review_specialist_path(review_item.item, review_item_id: review_item.id)
      - else
        %li None

  .btn-group
    - if true || show_details
      - if specialist_offices.length == 1
        %a.btn{"href" => specialist_patient_information_path(@specialist), "target" => "_blank"}
          %i.icon-print.icon-text
          Print Information for Patient
      - else
        %a.btn.dropdown-toggle{"href" => "#", "data-toggle" => "dropdown"}
          %i.icon-print.icon-text
          Print Information for Patient
          %span.caret
        %ul.dropdown-menu
          - specialist_offices.each do |specialist_office|
            - next if specialist_office.office.blank?
            %li
              %a{"href" => specialist_patient_information_office_path(@specialist, specialist_office), "target" => "_blank"}
                = specialist_office.office.short_address

    - if !current_user_is_admin? && (can? :update, @specialist)
      %a.btn.btn-primary.ajax{"href" => specialist_self_edit_path(@specialist, @specialist.token)}
        %i.icon-pencil.icon-white
        Update #{@specialist.name}'s information
    - else
      %a.btn{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeIn(200)"}
        %i.icon-bullhorn.icon-text
        Incorrect Information? Let us know
    - if !current_user_is_admin? && (can? :update, @specialist)
      %a.btn.ajax{"href" => photo_specialist_path(@specialist)}
        %i.icon-picture.icon-white
        #{@specialist.photo.present? ? "Change" : "Add"} #{@specialist.name}'s photo

  - if current_user_is_admin?

    %p.admin.btn-group

      - if @specialist.review_item.present?

        = link_to("<i class='icon-list-alt'></i>".html_safe + " Review Pending Changes", review_specialist_path(@specialist), :class => "btn ajax")

      - elsif can? :update, @specialist

        = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Specialist", edit_specialist_path(@specialist), :class => "btn ajax")
        = link_to("<i class='icon-file'></i>".html_safe + " Referral Forms", edit_referral_forms_path(parent_type: "Specialist", parent_id: @specialist.id), :class => "btn ajax")
        = link_to("<i class='icon-picture'></i>".html_safe + " Photo", photo_specialist_path(@specialist), :class => "btn ajax")
        %a.btn{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#share"}
          %i.icon-share
          Share
        = link_to("<i class='icon-folder-open'></i>".html_safe + " History", specialist_versions_path(@specialist), :class => "btn ajax")

      - if can? :destroy, @specialist

        = link_to("<i class='icon-trash'></i>".html_safe + " Delete Specialist", @specialist, :confirm => "Delete #{@specialist.name}?", :method => :delete, :class => "btn")

  - if current_user_is_admin?
    #share.collapse
      %p
        .alert.alert-info
          %h3 Secret edit link
          %p Anyone can edit this specialist if they have the following secret address:
          %p= specialist_self_edit_path(@specialist, @specialist.token, :only_path => false)
