:javascript
  function setContentCategoryVisibility(select, division_id) {
    if ( $(select).val() == 3 ) {
      $("#open_to_sc_category_" + division_id).show();
    } else {
      $("#open_to_sc_category_" + division_id).hide();
    }
  }

= simple_nested_form_for @specialization,
  html: { class: "form-horizontal" } do |f|
  - if not f.error_messages.blank?
    .alert.alert-error= f.error_messages

  - if current_user.as_super_admin?
    = f.input :name
    = f.input :member_name,
      hint: "e.g. 'Opthalmologist', 'Cardiothoracic surgeon', 'Nurse practitioner', 'Sports medicine specialist'"
    = f.input :label_name,
      hint: "Defines how this Specialty is labeled on columns and tables; e.g. as a 'Specialist', 'Family Physician', 'Nurse Practitioner', etc."
    = f.input :suffix,
      hint: "Use carefully, otherwise leave blank. Globally adds bold shordhand abbreviation next to the name of people with this specialty in filter tables (e.g. <span>John Smith<span class='suffix'>GP</span></span> if 'GP') </br> </br> Suffix: <span>Jane Doe<span class='suffix' id='specialization_suffix_demo'>#{@specialization.suffix}</span></span>".html_safe

    :javascript
      $("#specialization_suffix").bind("keyup", autoFillSuffix);
      function autoFillSuffix() {
        var str = "";
        $( "#specialization_suffix" ).each(function() {
          str += $( this ).val() + " ";
        });
        $( "div #specialization_suffix_demo" ).text( str );
      }

    - divisions = Division.all
  - else
    - divisions = current_user.as_divisions

  - divisions.each do |division|
    - possible_admins = division.users.admin + User.super_admin
    - division_admins = [nil]
    - possible_admins.uniq.each{ |user| division_admins << [user.name, user.id]}
    - specialization_option = SpecializationOption.find_by(specialization_id: @specialization.id, division_id: division.id)
    - owner_id = specialization_option.present? && specialization_option.owner.present? ? specialization_option.owner.id : nil
    - content_owner_id = specialization_option.present? && specialization_option.content_owner.present? ? specialization_option.content_owner.id : nil
    - is_new = specialization_option.present? && specialization_option.is_new
    - hide_from_division_users = specialization_option.present? && specialization_option.hide_from_division_users
    - open_to_type = specialization_option.present? && specialization_option.open_to_type
    - content_categories = ScCategory.specialty.map{ |category| [category.name, category.id] }
    - content_categories_id = specialization_option.present? && specialization_option.open_to_sc_category.present? ? specialization_option.open_to_sc_category.id : nil

    %hr
    %h4=division.name
    .control-group
      %label.control-label
        Specialists and Clinics Owner
      .controls
        = select_tag "owner[#{division.id}]",
          options_for_select(division_admins, owner_id),
          name: "owner[#{division.id}]",
          class: "select",
          include_blank: false
    .control-group
      %label.control-label
        Content Items Owner
      .controls
        = select_tag "content_owner[#{division.id}]",
          options_for_select(division_admins, content_owner_id),
          name: "content_owner[#{division.id}]",
          class: "select",
          include_blank: false
    .control-group
      %label.control-label
        Hide from division users
      .controls
        = check_box_tag "hide_from_division_users[#{division.id}]",
          "hide_from_division_users[#{division.id}]",
          hide_from_division_users,
          name: "hide_from_division_users[#{division.id}]"
    .control-group
      %label.control-label
        Mark as "new"
      .controls
        = check_box_tag "is_new[#{division.id}]",
          "is_new[#{division.id}]",
          is_new,
          name: "is_new[#{division.id}]"
    .control-group
      %label.control-label
        Open to
      .controls
        = select_tag "open_to_type[#{division.id}]",
          options_from_collection_for_select(SpecializationOption::OPEN_TO_HASH,
          :first,
          :last,
          open_to_type),
          name: "open_to_type[#{division.id}]",
          class: "select"
        = select_tag "open_to_sc_category[#{division.id}]",
          options_for_select(content_categories, content_categories_id),
          name: "open_to_sc_category[#{division.id}]",
          class: "select"

    :javascript
      $(document).ready(function() {
        $("#open_to_type_#{division.id}").each( function() {
          setContentCategoryVisibility(this, #{division.id})
        });
        $("#open_to_type_#{division.id}").live("change", function() {
          setContentCategoryVisibility(this, #{division.id})
        });
      });

  .form-actions
    = f.button :submit, class: "btn btn-primary"
    = link_to 'Cancel', specializations_path, class: "btn btn-danger"
