filtering.specialist_data["<%= city.id %>"] = {};
filtering.specialist_procedures["<%= city.id %>"] = [];
filtering.specialist_associations["<%= city.id %>"] = [];
filtering.specialist_languages["<%= city.id %>"] = [];

filtering.clinic_data["<%= city.id %>"] = {};
filtering.clinic_procedures["<%= city.id %>"] = [];
filtering.clinic_languages["<%= city.id %>"] = [];
filtering.clinic_healthcare_providers["<%= city.id %>"] = [];

<% specializations.each do |specialization| %>

  <% cache(specialization_path(specialization) + "_" + city_path(city)) do %>
    <%# e.g. sample cache key: "/specialties/33_/cities/33"%>

    filtering.current_cities["<%= city.id %>"] = true
    <%

    specialist_data = Hash.new
    specialist_procedures = Array.new
    specialist_associations = Array.new
    specialist_languages = Array.new

    # PERF NOTE: Expensive eager load below:  2925 ms without includes, 5438 ms with includes
    # specialists = specialization.specialists.in_cities([city]).reject{ |s| !s.show_in_table? }
    # ^^above is faster, but need to benchmark it page wide
    specialists = specialization.specialists.includes([{:specialist_offices => {:office => {:location => :address}}}]).in_cities_cached([city]).reject{ |s| !s.show_in_table? }
    if specialists.length > 0
      -%> has_specialists = true; <%
    end

    specialists.each do |s|
      specialist_data[s.id] = Hash.new
      specialist_data[s.id]['attributes'] = s.not_available? ? '' : specialist_filtering_attributes(s, true).join(' ')
      specialist_data[s.id]['name'] = s.name
      specialist_data[s.id]['specialties'] = s.specializations.map{ |sp| sp.id }
      specialist_data[s.id]['status_class'] = "#{s.status_class_hash}"
      specialist_data[s.id]['wait_time'] = s.show_wait_time_in_table? ? "#{s.waittime_mask.present? ? s.waittime_mask : -1}" : -1
      specialist_data[s.id]['cities'] = s.cities_for_display.map{ |c| c.id }
      specialist_data[s.id]['in_progress'] = true if s.in_progress
      specialist_data[s.id]['is_gp'] = true if s.is_gp?
      specialist_data[s.id]['is_new'] = true if s.new?
      specialist_procedures += s.not_available? ? [] : specialist_procedure_filtering_attributes(s)
      specialist_associations += s.not_available? ? [] : specialist_association_filtering_attributes(s)
      specialist_languages += s.not_available? ? [] : specialist_language_filtering_attributes(s)
    end

    #broken apart as we only want to record the procedures and associations for the specialists directly in our city, and only for specialization pages
    if other
      Specialist.in_cities_and_performs_procedures_in_specialization([city], specialization).reject{ |s| !s.show_in_table? }.each do |s|
        specialist_data[s.id] = Hash.new
        specialist_data[s.id]['attributes'] = s.not_available? ? '' : specialist_filtering_attributes(s, false).join(' ')
        specialist_data[s.id]['name'] = s.name
        specialist_data[s.id]['specialties'] = s.specializations.map{ |sp| sp.id }
        specialist_data[s.id]['status_class'] = "#{s.status_class_hash}"
        specialist_data[s.id]['wait_time'] = s.show_wait_time_in_table? ? "#{s.waittime_mask.present? ? s.waittime_mask : -1}" : -1
        specialist_data[s.id]['cities'] = s.cities_for_display.map{ |c| c.id }
        specialist_data[s.id]['in_progress'] = true if s.in_progress
        specialist_data[s.id]['is_gp'] = true if s.is_gp?
        specialist_data[s.id]['is_new'] = true if s.new?
      end
    end
    -%>
    filtering.specialist_data["<%= city.id %>"] = $.extend({}, filtering.specialist_data["<%= city.id %>"], <%=specialist_data.to_json.html_safe %>);
    filtering.specialist_procedures["<%= city.id %>"] = filtering.specialist_procedures["<%= city.id %>"].concat(<%=specialist_procedures.flatten.uniq.to_json.html_safe %>);
    filtering.specialist_associations["<%= city.id %>"] = filtering.specialist_associations["<%= city.id %>"].concat(<%=specialist_associations.flatten.uniq.to_json.html_safe %>);
    filtering.specialist_languages["<%= city.id %>"] = filtering.specialist_languages["<%= city.id %>"].concat(<%=specialist_languages.flatten.uniq.to_json.html_safe %>);
    <%

    clinic_data = Hash.new
    clinic_procedures = Array.new
    clinic_languages = Array.new
    clinic_healthcare_providers = Array.new

    clinics = specialization.clinics.includes([{:clinic_locations => [{:schedule => [:monday, :tuesday, :wednesday, :thursday, :friday, :saturday, :sunday]}, {:location => :address}]}, {:focuses => :procedure_specialization}]).in_cities([city]).reject{ |c| !c.show_in_table? }
    if clinics.length > 0
      -%> has_clinics = true; <%
    end

    clinics.each do |c|
      clinic_data[c.id] = Hash.new
      clinic_data[c.id]['attributes'] = clinic_filtering_attributes(c, false).join(' ')
      clinic_data[c.id]['name'] = c.name
      clinic_data[c.id]['specialties'] = c.specializations.map{ |sp| sp.id }
      clinic_data[c.id]['status_class'] = "#{c.status_class_hash}"
      clinic_data[c.id]['wait_time'] = c.show_wait_time_in_table? ? "#{c.waittime_mask.present? ? c.waittime_mask : -1}" : -1
      clinic_data[c.id]['cities'] = c.cities.reject{ |c| c.hidden? }.map{ |c| c.id }
      clinic_data[c.id]['in_progress'] = true if c.in_progress
      clinic_data[c.id]['is_new'] = true if c.new?
      clinic_data[c.id]['is_private'] = true if c.private?
      clinic_procedures += clinic_procedure_filtering_attributes(c)
      clinic_languages += clinic_language_filtering_attributes(c)
      clinic_healthcare_providers += clinic_healthcare_provider_filtering_attributes(c)
    end

    #broken apart as we only want to record the procedures and associations for the clinics directly in our city, and only for specialization pages
    if other
      Clinic.includes([{:clinic_locations => {:schedule => [:monday, :tuesday, :wednesday, :thursday, :friday, :saturday, :sunday]}}]).in_cities_and_performs_procedures_in_specialization([city], specialization).reject{ |c| !c.show_in_table? }.each do |c|
        clinic_data[c.id] = Hash.new
        clinic_data[c.id]['attributes'] = clinic_filtering_attributes(c, false).join(' ')
        clinic_data[c.id]['name'] = c.name
        clinic_data[c.id]['specialties'] = c.specializations.map{ |sp| sp.id }
        clinic_data[c.id]['status_class'] = "#{c.status_class_hash}"
        clinic_data[c.id]['wait_time'] = c.show_wait_time_in_table? ? "#{c.waittime_mask.present? ? c.waittime_mask : -1}" : -1
        clinic_data[c.id]['cities'] = c.cities.reject{ |c| c.hidden? }.map{ |c| c.id }
        clinic_data[c.id]['in_progress'] = true if c.in_progress
        clinic_data[c.id]['is_new'] = true if c.new?
        clinic_data[c.id]['is_private'] = true if c.private?
      end
    end

    -%>
    filtering.clinic_data["<%= city.id %>"] = $.extend({}, filtering.clinic_data["<%= city.id %>"], <%=clinic_data.to_json.html_safe %>);
    filtering.clinic_procedures["<%= city.id %>"] = filtering.clinic_procedures["<%= city.id %>"].concat(<%=clinic_procedures.flatten.uniq.to_json.html_safe %>);
    filtering.clinic_languages["<%= city.id %>"] = filtering.clinic_languages["<%= city.id %>"].concat(<%=clinic_languages.flatten.uniq.to_json.html_safe %>);
    filtering.clinic_healthcare_providers["<%= city.id %>"] = filtering.clinic_healthcare_providers["<%= city.id %>"].concat(<%=clinic_healthcare_providers.flatten.uniq.to_json.html_safe %>);

  <% end %>

<% end %>
