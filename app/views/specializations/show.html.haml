- set_page_specific_title "#{@specialization.name}"

%ul#specialties-menu
  %li.dropdown
    %a.specialties-dropdown-toggle{"href" => "javascript:void(0)"}
      All Specialties
      %b.caret
  %li.subsequent{:class => @specialization.fully_in_progress_for_divisions(current_user_divisions) && "in-progress"}
    = @specialization.name
    = "<span class='new'>new</span>".html_safe if @specialization.new_for_divisions(current_user_divisions)

= render 'partials/specialization_dropdown_menu'

.tabbable

  = render 'partials/specialization_content'

  - cache(specialization_path(@specialization)) do

    .content-wrapper

      .tab-content

        #specialist_tab.tab-pane

          .content
            .row
              .span8half
                .toggle-filters.visible-phone
                  %a{"href" => "javascript:void(0)", "onclick" => "$('#specialist_filters, #specialist_table').toggle()"}
                    %i.icon-blue.icon-cog.icon-small
                    = "Show / Hide #{@specialization.label_name.titleize} Filters"

                #specialist_phrase.filter-phrase

                #specialist_custom_wait_time.wait-time-phrase
                  %i.icon-link
                  You have chosen an area of practice in which specialists have optionally provided a specific wait time. The wait time column has been updated accordingly.

                #specialist_no_wait_time.wait-time-phrase.none
                  %i.icon-link
                  You have chosen multiple areas of practice, and in one or more of which specialists have optionally provided a specific wait time. Due to the conflicting wait times, the wait time column is blank.

                #specialist_others.other-phrase

                #specialist_hide_others.other-phrase
                  %a{"href" => "javascript:void(0)", "onclick" => "hide_others('s', 'specialist', '#{@specialization.member_name.uncapitalize_first_letter.pluralize}')"}Hide
                  results from other specialties.

                %table.table.table-condensed.tablesorter.five#specialist_table
                  %thead
                    %tr{:class => 'tableheader'}
                      %th{:class => "sp {sorter: 'bylastname'} name_column"}= @specialization.label_name.titleize
                      %th{:class => "s {sorter: 'text'} specialty_column"} Specialty
                      %th{:class => "st {sorter: 'status'} status_column"} Accepting New<br>Referrals?
                      %th{:class => "wt {sorter: 'waittime'} wait_time_column"} Average Non-<br>Urgent Patient<br>Wait Time
                      %th{:class => "c {sorter: 'blanks_to_bottom'} city_column"} City
                  %tbody
                    %tr.placeholder
                      %td
                      %td
                      %td
                      %td
                      %td

                #specialist_assumed_list
                  - if @specialization.procedure_specializations.assumed_specialist.reject{ |ps| ps.parent.present? }.present?
                    %i.icon-asterisk.icon-disabled.icon-small
                    Areas of practice we assume all #{@specialization.member_name.uncapitalize_first_letter.pluralize} see or do:
                    = @specialization.procedure_specializations.assumed_specialist.reject{ |ps| ps.parent.present? }.sort{ |a,b| a.procedure.name <=> b.procedure.name }.map{ |ps| ps.procedure.name.uncapitalize_first_letter }.to_sentence

              .span3.offsethalf
                .well.filter#specialist_filters
                  .title= "Filter #{@specialization.label_name.titleize.pluralize}"
                  - if @specialization.procedure_specializations.non_assumed.present?
                    .filter-group
                      %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#specialist-filter-aop"}
                        Accepts Referrals For
                        - if @specialization.procedure_specializations.assumed_specialist.present?
                          %sup
                            %i.icon-asterisk.icon-disabled.icon-small
                      #specialist-filter-aop.collapsable.in
                        .filter-group-content
                          - @specialization.arranged_procedure_specializations(:focused).each do |ps, children|
                            %label{:class => ps.specialist_wait_time && "custom_wait_time"}
                              %input.sp{"type" => "checkbox", "id" => "sp#{ps.procedure.id}_", "onclick" => "$('#children_sp#{ps.procedure.id}_').collapse('toggle')", :name => "#{ps.specialist_wait_time? ? 1 : 0}"}
                              %span= ps.procedure.name
                            - if children.length > 0
                              .collapse{:id => "children_sp#{ps.procedure.id}_"}
                                %script{"type" => "text/javascript"}
                                  :plain
                                    $(document).ready(function() {
                                      $('#children_sp#{ps.procedure.id}_').collapse({toggle: false});
                                    });
                                - children.each do |child_ps, grandchildren|
                                  %label.indent{:class => child_ps.specialist_wait_time && "custom_wait_time"}
                                    %input.sp{"type" => "checkbox", "id" => "sp#{child_ps.procedure.id}_", "onclick" => "$('#grandchildren_sp#{child_ps.procedure.id}_').collapse('toggle')", "class" => "child_sp#{ps.procedure.id}_", :name => "#{child_ps.specialist_wait_time? ? 1 : 0}"}
                                    %span= child_ps.procedure.name
                                  - if grandchildren.length > 0
                                    .collapse{:id => "grandchildren_sp#{child_ps.procedure.id}_"}
                                      %script{"type" => "text/javascript"}
                                        :plain
                                          $(document).ready(function() {
                                            $('#grandchildren_sp#{child_ps.procedure.id}_').collapse({toggle: false});
                                          });
                                      - grandchildren.each do |grandchild_ps, greatgrandchildren|
                                        %label.indent2{:class => grandchild_ps.specialist_wait_time && "custom_wait_time"}
                                          %input.sp{"type" => "checkbox", "id" => "sp#{grandchild_ps.procedure.id}_", "class" => "grandchild_sp#{child_ps.procedure.id}_", :name => "#{grandchild_ps.specialist_wait_time? ? 1 : 0}"}
                                          %span= grandchild_ps.procedure.name

                          %a.more#s_procedures_more{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#more_s_procedures"} More...

                          %script{"type" => "text/javascript"}
                            :plain
                              $(document).ready(function() {
                                $('#more_s_procedures').on('show', function() {
                                  $('#s_procedures_more').html('Less...');
                                });
                                $('#more_s_procedures').on('hide', function() {
                                  $('#s_procedures_more').html('More...');
                                });
                              });

                          #more_s_procedures.more.collapse
                            - @specialization.arranged_procedure_specializations(:non_focused).each do |ps, children|
                              %label{:class => ps.specialist_wait_time && "custom_wait_time"}
                                %input.sp{"type" => "checkbox", "id" => "sp#{ps.procedure.id}_", "onclick" => "$('#children_sp#{ps.procedure.id}_').collapse('toggle')", :name => "#{ps.specialist_wait_time? ? 1 : 0}"}
                                %span= ps.procedure.name
                              - if children.length > 0
                                .collapse{:id => "children_sp#{ps.procedure.id}_"}
                                  %script{"type" => "text/javascript"}
                                    :plain
                                      $(document).ready(function() {
                                        $('#children_sp#{ps.procedure.id}_').collapse({toggle: false});
                                      });
                                  - children.each do |child_ps, grandchildren|
                                    %label.indent{:class => child_ps.specialist_wait_time && "custom_wait_time"}
                                      %input.sp{"type" => "checkbox", "id" => "sp#{child_ps.procedure.id}_", "onclick" => "$('#grandchildren_sp#{child_ps.procedure.id}_').collapse('toggle')", "class" => "child_sp#{ps.procedure.id}_", :name => "#{child_ps.specialist_wait_time? ? 1 : 0}"}
                                      %span= child_ps.procedure.name
                                    - if grandchildren.length > 0
                                      .collapse{:id => "grandchildren_sp#{child_ps.procedure.id}_"}
                                        %script{"type" => "text/javascript"}
                                          :plain
                                            $(document).ready(function() {
                                              $('#grandchildren_sp#{child_ps.procedure.id}_').collapse({toggle: false});
                                            });
                                        - grandchildren.each do |grandchild_ps, greatgrandchildren|
                                          %label.indent2{:class => grandchild_ps.specialist_wait_time && "custom_wait_time"}
                                            %input.sp{"type" => "checkbox", "id" => "sp#{grandchild_ps.procedure.id}_", "class" => "grandchild_sp#{child_ps.procedure.id}_", :name => "#{grandchild_ps.specialist_wait_time? ? 1 : 0}"}
                                            %span= grandchild_ps.procedure.name

                  .filter-group
                    %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#specialist-filter-referral"}
                      Referrals
                    #specialist-filter-referral.collapsable.in
                      .filter-group-content
                        %label
                          %input#srph.sr{"type" => "checkbox"} Accepted via phone
                        %label.indent#slagtime
                          Responded to within:
                          %select.sc
                            %option{"value" => 0} Any timeframe
                            - Specialist::LAGTIME_HASH.each do |lag_index, lag_value|
                              %option{"value" => "sc#{lag_index}_"}= lag_value
                        %label
                          %input#srpb.sr{"type" => "checkbox"} Patients can call to book after referral

                  .filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-sex"}
                      Sex
                    #specialist-filter-sex.collapsable.collapse
                      .filter-group-content
                        %label.half
                          %input#ssm.ss{"type" => "checkbox"} Male
                        %label.half
                          %input#ssf.ss{"type" => "checkbox"} Female

                  .filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-schedule"}
                      Schedule
                    #specialist-filter-schedule.collapsable.collapse
                      .filter-group-content
                        %label.half
                          %input.ssh{"type" => "checkbox", "id" => "sshsat"} Saturday
                        %label.half
                          %input.ssh{"type" => "checkbox", "id" => "sshsun"} Sunday

                  .filter-group#sl-filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-language"}
                      Languages
                    #specialist-filter-language.collapsable.collapse
                      .filter-group-content
                        %label
                          %input#si.si{"type" => "checkbox"} Interpreter available
                        - Language.all.each do |l|
                          %label.half
                            %input.sl{"type" => "checkbox", "id" => "sl#{l.id}_"}= l.name

                  .filter-group#sa-filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-association"}
                      Associations
                    #specialist-filter-association.collapsable.collapse
                      .filter-group-content
                        - if @specialization.clinics.present?
                          %label.indent
                            Clinic:
                            %select.sa#clinic_associations
                        %label.indent
                          Hospital:
                          %select.sa#hospital_associations

                  - if Division.all.length > 1
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-cities"}
                        Expand Search Area
                      #specialist-filter-cities.collapsable.collapse
                        .filter-group-content
                          - City.not_hidden.each do |c|
                            %label.half
                              = check_box_tag c.id, c.id, false, :class => "sct", :id => "city_s_#{c.id}"
                              = c.name

                #icon_key
                  .title Icon Key
                  %ul.no-marker
                    %li
                      %i.icon-ok.icon-green
                      Accepting new referrals
                    %li
                      %i.icon-ok.icon-orange
                      Accepting limited new referrals by geography or # of patients
                    %li
                      %i.icon-remove.icon-red
                      Not accepting new referrals
                    %li
                      %i.icon-signout.icon-blue
                      Only works out of, and possibly accepts referrals through, clinics and/or hospitals
                    %li
                      %i.icon-warning-sign.icon-orange
                      Referral status will change soon
                    %li
                      %i.icon-question-sign.icon-text
                      Referral status is unknown

              %script{"type" => "text/javascript"}
                :plain
                  $(document).ready(function() {
                    var update_custom_specialist_table = function()
                    {
                      update_table('s', 'specialist', '#{@specialization.member_name.uncapitalize_first_letter.pluralize}');
                    }
                    $('.sp, .sc, .sr, .ss, .si, .ssh, .sl, .sa').click( update_custom_specialist_table );
                    $('.sct').click( function() { expand_city($(this).prop('checked'), [#{@specialization.id}], $(this).attr('name'), -1, [], []) });
                  });

        #clinic_tab.tab-pane

          .content
            .row
              .span8half
                .toggle-filters.visible-phone
                  %a{"href" => "javascript:void(0)", "onclick" => "$('#clinic_filters, #clinic_table').toggle()"}
                    %i.icon-blue.icon-cog.icon-small
                    Show / Hide Clinic Filters

                #clinic_phrase.filter-phrase

                #clinic_custom_wait_time.wait-time-phrase
                  %i.icon-link
                  You have chosen an area of practice in which clinics have optionally provided a specific wait time. The wait time column has been updated accordingly.

                #clinic_no_wait_time.wait-time-phrase.none
                  %i.icon-link
                  You have chosen multiple areas of practice, and in one or more of which clinics have optionally provided a specific wait time. Due to the conflicing wait times, the wait time column is blank.

                #clinic_others.other-phrase

                #clinic_hide_others.other-phrase
                  %a{"href" => "javascript:void(0)", "onclick" => "hide_others('c', 'clinic', 'clinics')"}Hide
                  results from other specialties.

                %table.table.table-condensed.tablesorter.five#clinic_table
                  %thead
                    %tr{:class => 'tableheader'}
                      %th{:class => "sp {sorter: 'text'} name_column"} Clinic
                      %th{:class => "s {sorter: 'text'} specialty_column"} Specialty
                      %th{:class => "st {sorter: 'status'} status_column"} Accepting New<br>Referrals?
                      %th{:class => "wt {sorter: 'waittime'} wait_time_column"} Average Non-<br>Urgent Patient<br>Wait Time
                      %th{:class => "c {sorter: 'blanks_to_bottom'} city_column"} City
                  %tbody
                    %tr.placeholder
                      %td
                      %td
                      %td
                      %td
                      %td

                #clinic_assumed_list
                  - if @specialization.procedure_specializations.assumed_clinic.reject{ |ps| ps.parent.present? }.present?
                    %i.icon-asterisk.icon-disabled.icon-small
                    Areas of practice we assume all #{@specialization.name} clinics see or do:
                    = @specialization.procedure_specializations.assumed_clinic.reject{ |ps| ps.parent.present? }.sort{ |a,b| a.procedure.name <=> b.procedure.name }.map{ |ps| ps.procedure.name.uncapitalize_first_letter }.to_sentence

              .span3.offsethalf
                .well.filter#clinic_filters
                  .title
                    Filter Clinics
                  .filter-group
                    %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#clinic-filter-aop"}
                      Accepts Referrals For
                      - if @specialization.procedure_specializations.assumed_clinic.present?
                        %sup
                          %i.icon-asterisk.icon-disabled.icon-small
                    #clinic-filter-aop.collapsable.in
                      .filter-group-content
                        - @specialization.arranged_procedure_specializations(:focused).each do |ps, children|
                          %label{:class => ps.clinic_wait_time && "custom_wait_time"}
                            %input.cp{"type" => "checkbox", "id" => "cp#{ps.procedure.id}_", "onclick" => "$('#children_cp#{ps.procedure.id}_').collapse('toggle')", :name => "#{ps.clinic_wait_time? ? 1 : 0}"}
                            %span= ps.procedure.name
                          - if children.length > 0
                            .collapse{:id => "children_cp#{ps.procedure.id}_"}
                              %script{"type" => "text/javascript"}
                                :plain
                                  $(document).ready(function() {
                                    $('#children_cp#{ps.procedure.id}_').collapse({toggle: false});
                                  });
                              - children.each do |child_ps, grandchildren|
                                %label.indent{:class => child_ps.clinic_wait_time && "custom_wait_time"}
                                  %input.cp{"type" => "checkbox", "id" => "cp#{child_ps.procedure.id}_", "onclick" => "$('#grandchildren_cp#{child_ps.procedure.id}_').collapse('toggle')", "class" => "child_cp#{ps.procedure.id}_", :name => "#{child_ps.clinic_wait_time? ? 1 : 0}"}
                                  %span= child_ps.procedure.name
                                - if grandchildren.length > 0
                                  .collapse{:id => "grandchildren_cp#{child_ps.procedure.id}_"}
                                    %script{"type" => "text/javascript"}
                                      :plain
                                        $(document).ready(function() {
                                          $('#grandchildren_cp#{child_ps.procedure.id}_').collapse({toggle: false});
                                        });
                                    - grandchildren.each do |grandchild_ps, greatgrandchildren|
                                      %label.indent2{:class => grandchild_ps.clinic_wait_time && "custom_wait_time"}
                                        %input.cp{"type" => "checkbox", "id" => "cp#{grandchild_ps.procedure.id}_", "class" => "grandchild_cp#{child_ps.procedure.id}_", :name => "#{grandchild_ps.clinic_wait_time? ? 1 : 0}"}
                                        %span= grandchild_ps.procedure.name

                        %a.more#c_procedures_more{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#more_c_procedures"} More...

                        %script{"type" => "text/javascript"}
                          :plain
                            $(document).ready(function() {
                              $('#more_c_procedures').on('show', function() {
                                $('#c_procedures_more').html('Less...');
                              });
                              $('#more_c_procedures').on('hide', function() {
                                $('#c_procedures_more').html('More...');
                              });
                            });

                        #more_c_procedures.more.collapse
                          - @specialization.arranged_procedure_specializations(:non_focused).each do |ps, children|
                            %label{:class => ps.clinic_wait_time && "custom_wait_time"}
                              %input.cp{"type" => "checkbox", "id" => "cp#{ps.procedure.id}_", "onclick" => "$('#children_cp#{ps.procedure.id}_').collapse('toggle')", :name => "#{ps.clinic_wait_time? ? 1 : 0}"}
                              %span= ps.procedure.name
                            - if children.length > 0
                              .collapse{:id => "children_cp#{ps.procedure.id}_"}
                                %script{"type" => "text/javascript"}
                                  :plain
                                    $(document).ready(function() {
                                      $('#children_cp#{ps.procedure.id}_').collapse({toggle: false});
                                    });
                                - children.each do |child_ps, grandchildren|
                                  %label.indent{:class => child_ps.clinic_wait_time && "custom_wait_time"}
                                    %input.cp{"type" => "checkbox", "id" => "cp#{child_ps.procedure.id}_", "onclick" => "$('#grandchildren_cp#{child_ps.procedure.id}_').collapse('toggle')", "class" => "child_cp#{ps.procedure.id}_", :name => "#{child_ps.clinic_wait_time? ? 1 : 0}"}
                                    %span= child_ps.procedure.name
                                  - if grandchildren.length > 0
                                    .collapse{:id => "grandchildren_cp#{child_ps.procedure.id}_"}
                                      %script{"type" => "text/javascript"}
                                        :plain
                                          $(document).ready(function() {
                                            $('#grandchildren_cp#{child_ps.procedure.id}_').collapse({toggle: false});
                                          });
                                      - grandchildren.each do |grandchild_ps, greatgrandchildren|
                                        %label.indent2{:class => grandchild_ps.clinic_wait_time && "custom_wait_time"}
                                          %input.cp{"type" => "checkbox", "id" => "cp#{grandchild_ps.procedure.id}_", "class" => "grandchild_cp#{child_ps.procedure.id}_", :name => "#{grandchild_ps.clinic_wait_time? ? 1 : 0}"}
                                          %span= grandchild_ps.procedure.name

                  .filter-group
                    %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#clinic-filter-referral"}
                      Referrals
                    #clinic-filter-referral.collapsable.in
                      .filter-group-content
                        %label#clagtime
                          %input#crph.cr{"type" => "checkbox"} Accepted via phone
                        %label.indent
                          Responded to within:
                          %select.cc
                            %option{"value" => 0} Any timeframe
                            - Clinic::LAGTIME_HASH.each do |lag_index, lag_value|
                              %option{"value" => "csc#{lag_index}_"}= lag_value
                        %label
                          %input#crpb.cr{"type" => "checkbox"} Patients can call to book after referral

                  .filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-details"}
                      Clinic Details
                    #clinic-filter-details.collapsable.collapse
                      .filter-group-content
                        %label.half
                          %input#cdpb.cd{"type" => "checkbox"} Public
                        %label.half
                          %input#cdpv.cd{"type" => "checkbox"} Private
                        %label
                          %input.cd{"type" => "checkbox", "id" => "cdwa"} Wheelchair Accessible

                  .filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-schedule"}
                      Schedule
                    #clinic-filter-schedule.collapsable.collapse
                      .filter-group-content
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshmon"} Monday
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshtues"} Tuesday
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshwed"} Wednesday
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshthurs"} Thursday
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshfri"} Friday
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshsat"} Saturday
                        %label
                          %input.csh{"type" => "checkbox", "id" => "cshsun"} Sunday

                  .filter-group#ch-filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-healthcare-providers"}
                      Care Providers
                    #clinic-filter-healthcare-providers.collapsable.collapse
                      .filter-group-content
                        - HealthcareProvider.all.each do |h|
                          %label
                            %input.ch{"type" => "checkbox", "id" => "ch#{h.id}_"}= h.name

                  .filter-group#cl-filter-group
                    %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-language"}
                      Languages
                    #clinic-filter-language.collapsable.collapse
                      .filter-group-content
                        %label
                          %input#ci.ci{"type" => "checkbox"} Interpreter available
                        - Language.all.each do |l|
                          %label.half
                            %input.cl{"type" => "checkbox", "id" => "cl#{l.id}_"}= l.name
                  - if Division.all.length > 1
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-cities"}
                        Expand Search Area
                      #clinic-filter-cities.collapsable.collapse
                        .filter-group-content
                          - City.not_hidden.each do |c|
                            %label.half
                              = check_box_tag c.id, c.id, false, :class => "cct", :id => "city_c_#{c.id}"
                              = c.name

                #icon_key
                  .title Icon Key
                  %ul.no-marker
                    %li
                      %i.icon-ok.icon-green
                      Accepting new referrals
                    %li
                      %i.icon-remove.icon-red
                      Not accepting new referrals
                    %li
                      %i.icon-question-sign.icon-text
                      Referral status is unknown

              %script{"type" => "text/javascript"}
                :plain
                  $(document).ready(function() {
                    $('.cp, .cc, .cr, .cd, .csh, .ch, .ci, .cl').click( update_clinic_table );
                    $('.cct').click( function() { expand_city($(this).prop('checked'), [#{@specialization.id}], $(this).attr('name'), -1, [], []) });
                  });

        - ScCategory.specialty.each do |sc_category|

          .tab-pane{"id" => "#{sc_category.name.remove_whitespace}_tab"}

            - if sc_category.inline?

              %div{:id => "#{sc_category.id}_items"}

            - else

              .content
                .row
                  .span8half
                    .toggle-filters.visible-phone
                      %a{"href" => "javascript:void(0)", "onclick" => "$('##{sc_category.id}_filters, ##{sc_category.id}_table').toggle();"}
                        %i.icon-blue.icon-cog.icon-small
                        Show / Hide #{sc_category.name} Filters

                    .filter-phrase{:id => "#{sc_category.id}_phrase"}

                    %table.table.table-condensed.tablesorter.category_table{:id => "#{sc_category.id}_table"}
                      %thead
                        %tr{:class => 'tableheader'}
                          %th{:class => "title {sorter: 'link_only'}"} Title
                          %th{:class => "subcategory {sorter: 'text'}"} Subcategory
                          %th.favorite
                          %th.email
                          %th.fb
                      %tbody
                        %tr.placeholder
                          %td
                          %td
                          %td
                          %td


                  - if sc_category.has_children?
                    .span3.offsethalf
                      .well.filter{:id => "#{sc_category.id}_filters"}
                        .title
                          Filter #{sc_category.name}

                        .filter-group
                          %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "##{sc_category.id}-filter-subcategories"}
                            Subcategories
                          .collapsable.in{:id => "#{sc_category.id}-filter-subcategories"}
                            .filter-group-content
                              %label
                                %input.ic#icall{"type" => "radio", "name" => "ic#{sc_category.id}", "checked" => "checked"} All
                              - sc_category.children.each do |subcategory|
                                %label
                                  %input.ic{"type" => "radio", "name" => "ic#{sc_category.id}", "id" => "ic#{subcategory.id}_"}= subcategory.name

                  %script{"type" => "text/javascript"}
                    :plain
                      var update_category_#{sc_category.id}_table = function() { update_category_table(#{sc_category.id}, '#{sc_category.name}'); }
                      $(document).ready(function() {
                        $("input.ic[name='ic#{sc_category.id}'], input.if[name='if#{sc_category.id}']").click( update_category_#{sc_category.id}_table );
                      });

            %hr
            = link_to "<i class='icon-arrow-right icon-blue'></i> Browse #{sc_category.name} content from all specialties".html_safe, sc_category_path(sc_category), :class => 'ajax'

      #feedback
        .inner
          = simple_form_for @feedback, :html => { :class => "ajax feedback_form" } do |f|

            = f.input :feedback, :label => "Please provide us with any comments about '<span class='feedback_item_title'></span>'".html_safe
            = f.input :item_type, :as => :hidden
            = f.input :item_id, :as => :hidden

            .form-actions
              %a.btn.btn-primary{"href" => "javascript:void(0)", "onclick" => "send_feedback($('form.feedback_form'))" }
                .before-click
                  Send Feedback
                .after-click.hidden
                  Sending
              %a.btn.btn-danger{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeOut(200)"} Cancel

      #feedback_thanks
        .inner
          %h2 Thank you!

          %p.space.no_indent= "Thank you for providing your feedback  on '<span class='feedback_item_title'></span>'. Your contributions help make Pathways a valuable resource for the community.".html_safe

          %p.space.no_indent We will review your feedback in the near future and take action as necessary.

          %p.space.no_indent
            %a.btn.btn-primary{"href" => "javascript:void(0)", "onclick" => "$('#feedback_thanks').fadeOut(200)" } Close

      %script{"type" => "text/javascript"}
        :plain
          $(document).ready(function() { $('.tt').tooltip({trigger: 'manual'}) });

          function show_feedback(item_title, item_id)
          {
            $('.feedback_item_title').text(item_title);
            $('#feedback_item_item_id').val(item_id);
            $('#feedback_item_item_type').val("ScItem");
            $('#feedback').fadeIn(200);
          }

          function send_feedback(form) {
            $("#sendFeedbackButton").addClass('disabled');
            $('.before-click').addClass('hidden');
            $('.after-click').removeClass('hidden');
            $.ajax({
                url: form.attr('action'),
                data: form.serialize(),
                type: 'POST'
            }).success(function(json) {
                $("#sendFeedbackButton").removeClass('disabled');
                $('.after-click').addClass('hidden');
                $('.before-click').removeClass('hidden');
                $('#feedback').fadeOut(200);
                $('#feedback_item_feedback').val('')
                $('#feedback_thanks').fadeIn(200);
            });
          }

      - tab_javascript = ""
      - ScCategory.specialty.each do |sc_category|
        - tab_javascript += "else if (hash == '##{sc_category.name.remove_whitespace}') { _gaq.push(['_trackEvent', 'tab_type', '#{sc_category.id}']); _gaq.push(['_trackEvent', 'tab_user', $('body').data('GLOBAL_USER_TYPE').toString(), $('body').data('GLOBAL_USER_ID').toString()]); $('#content_tabs a##{sc_category.name.remove_whitespace}').tab('show'); } "

      %script{"type" => "text/javascript"}
        :plain
          $('.collapsable').on('shown', function() {
            $(this).siblings('.filter-group-title').removeClass('closed').addClass('open');
          });
          $('.collapsable').on('hidden', function() {
            $(this).siblings('.filter-group-title').removeClass('open').addClass('closed');
          });
          $(document).ready(function() {
            $('#specialist_table').tablesorter({sortList: [[2,0],[3,0],[4,0]]});
            $('#clinic_table').tablesorter({sortList: [[0,0],[2,0],[3,0],[4,0]]});
            $('.category_table').tablesorter({sortList: [[0,0],[1,0],[2,0]]});

            //flip to a tab if appropriate
            var hash = window.location.hash;

            if (hash == '#specialists')
            {
              _gaq.push(['_trackEvent', 'tab_type', 'specialists']);
              _gaq.push(['_trackEvent', 'tab_user', $('body').data('GLOBAL_USER_TYPE').toString(), $('body').data('GLOBAL_USER_ID').toString()]);
              $('#content_tabs a#specialists').tab('show');
            }
            else if (hash == '#clinics')
            {
              _gaq.push(['_trackEvent', 'tab_type', 'clinics']);
              _gaq.push(['_trackEvent', 'tab_user', $('body').data('GLOBAL_USER_TYPE').toString(), $('body').data('GLOBAL_USER_ID').toString()]);
              $('#content_tabs a#clinics').tab('show');
            }
            #{tab_javascript}
            //make full rows clickable
            $('#specialist_table tr, #clinic_table tr').click( function() { $(this).find('a').click(); });
            $('.category_table tr').click( function() {
              var link = $(this).find('td.title a');
              if (link.hasClass('ajax'))
              {
                link.click();
              }
              else
              {
                window.open(link.attr('href'));
              }
            });
            $('table a').click( function(e) { e.stopPropagation(); });
          });

-# END OF CACHING

%script{"type" => "text/javascript"}
  :plain
    var city_ids = [#{current_user_cities_for_specialization(@specialization).map{|c| c.id}.join(',')}];
    $(document).ready(function() {
      for (var i = 0; i < city_ids.length; ++i) {
        var city_id = city_ids[i];
        $('#city_s_' + city_id).prop('checked', true);
        $('#city_c_' + city_id).prop('checked', true);
      }
    });

.content-wrapper
  %p.admin.btn-group
    - if can? :update, @specialization
      = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Specialty", edit_specialization_path(@specialization), :class => "btn ajax")
    - if can? :destroy, @specialization
      = link_to("<i class='icon-trash'></i>".html_safe + " Delete Specialty", @specialization, :confirm => "Delete #{@specialization.name}?", :method => :delete, :class => "btn")
