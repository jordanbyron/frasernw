- title "#{@clinic.name}"

- specialization = (current_user_is_admin? ? @clinic.specializations : @clinic.specializations.not_in_progress_for_divisions(current_user_divisions)).first || Specialization.not_in_progress_for_divisions(Division.all).first

- favorite_class = logged_in? ? (Favorite.find_by_user_id_and_favoritable_id_and_favoritable_type(current_user.id, @clinic.id, "Clinic").present? ? "icon-red" : "icon-text") : "icon-text"

%ul#specialties-menu
  %li.dropdown
    %a.specialties-dropdown-toggle{"href" => "javascript:void(0)"}
      All Specialties
      %b.caret
  %li.subsequent{:class => specialization.fully_in_progress_for_divisions(current_user_divisions) && "in-progress"}
    = link_to specialization.name, specialization_path(specialization), :class => 'ajax'
    = "<span class='new'>new</span>".html_safe if specialization.new_for_divisions(current_user_divisions)

= render 'partials/specialization_dropdown_menu'

= render 'partials/specialization_nav', :specialization => specialization, :selected => 'clinics'

- show_details = false
- show_areas_of_practice = false
- clinic_locations = @clinic.clinic_locations.order(:created_at).reject{ |cl| cl.empty? }

.content-wrapper

  - if @is_version
    = render 'versions/info'

  - cache(clinic_path(@clinic)) do
    .content
      .row
        .span7half
          .headline-header
          .headline

            %h2
              = @clinic.name
              %a{"href" => "javascript:void(0)", "onclick" => "favorite('clinics',#{@clinic.id},'#{escape_javascript(@clinic.name)}')", "title" => "Favourite / un-favourite"}
                %i.icon-heart{"id" => "user_favorite_clinics_#{@clinic.id}"}

            %h3.specialty_links
              - self_in_progress = @clinic.in_progress
              = @clinic.specializations.reject{ |s| !self_in_progress && s.fully_in_progress_for_divisions(@clinic.divisions) }.map{ |s| "<a href='#{specialization_path(s)}' class='#{ s.fully_in_progress_for_divisions(@clinic.divisions) ? "in-progress ajax" : "ajax" }'>#{s.name}</a>" }.to_sentence.html_safe

            - if @clinic.not_responded?

              %p.space.no_indent This clinic has not yet provided Pathways their information.

            - elsif @clinic.closed?

              %p.space.no_indent This clinic has closed.

            - elsif @clinic.purposely_not_yet_surveyed?

              - show_areas_of_practice = true

              %p.space.no_indent This clinic has purposely not yet been surveyed by Pathways. It may be out of our current catchment area, or in a speciality we have yet to fully survey.

              - if @clinic.specialists.present?
                %p.space.no_indent
                  %strong Specialists that work in this clinic:
                  != @clinic.specialists.map{ |specialist| "<a href='#{specialist_path(specialist)}' class='ajax')\">#{specialist.name}</a>" }.to_sentence

            - else

              - show_details = true
              - show_areas_of_practice = true

              %p.space.no_indent
                %i{:class => @clinic.status_class}
                %strong.status= @clinic.status.end_with_period
              - if @clinic.status_details.present?
                %p.no_indent
                  %strong Details:
                  = @clinic.status_details.end_with_period.convert_newlines_to_br
              - if @clinic.limitations.present?
                %p.no_indent
                  %strong Limitations:
                  = @clinic.limitations.end_with_period.convert_newlines_to_br

          .headline-footer

          - if show_details

            - if clinic_locations.present? || @clinic.languages.present? || @clinic.interpreter_available

              %h6 Clinic Information

              - clinic_locations.each do |cl|
                - address = cl.resolved_address

                %p.space
                  %strong= cl.phone_only if cl.phone_only.present?
                %p= "Fax: #{cl.fax}" if cl.fax.present?
                %p= "Public e-mail (okay for patient use): #{mail_to cl.public_email, cl.public_email, :target => '_blank'}".html_safe if cl.public_email.present?
                %p= "Private e-mail (for physician office use only): #{mail_to cl.email, cl.email, :target => '_blank'}".html_safe if cl.email.present?
                %p= "Website: #{link_to cl.url, cl.url, :target => '_blank'}".html_safe if cl.url.present?
                %p= cl.contact_details.convert_newlines_to_br if cl.contact_details.present?
                - if cl.location.present? && cl.location.in_hospital?
                  - hospital = cl.location.hospital_in
                  %p
                    = "In #{link_to hospital.name, hospital_path(hospital), :class => 'ajax'}".html_safe
                    = "(#{cl.sector})" if cl.sector?
                  %p= link_to address.address, address.map_url, :target => "_blank" if address.present? && !address.empty?
                  %p= cl.location.in_details if cl.location.in_details.present?
                - elsif address.present? && !address.empty?
                  %p= "(#{cl.sector})" if cl.sector?
                  %p= link_to address.address, address.map_url, :target => "_blank"
                - if cl.location_opened.present?
                  %p
                    This clinic opened at this location
                    = cl.location_opened == "Prior to 2010" ? "prior to 2010." : "in #{cl.location_opened}."
                %p= "Wheelchair accessible." if cl.wheelchair_accessible?
                - if cl.scheduled?
                  %p
                    %strong Schedule:
                    = cl.schedule.collapsed_days_and_hours.join(". ").end_with_period

              - if @clinic.languages.present?
                %p.space
                  = @clinic.languages.map{ |x| "<a class='ajax' href='#{language_path(x)}'>#{x.name}</a>" }.to_sentence.html_safe
                  = "#{@clinic.languages.count == 1 ? 'is' : 'are' } spoken at this clinic."

              - if @clinic.interpreter_available
                %p
                  Interpreter available upon request.

            - if @clinic.accepts_referrals_via.present? || @clinic.responds_via.present? || @clinic.referral_form_mask != 3  || @clinic.required_investigations.present? || @clinic.waittime.present? || @clinic.lagtime.present? || @clinic.patient_can_book_mask != 3

              %h6 Referrals

              - if @clinic.accepts_referrals_via.present?
                %p
                  %strong Accepted by:
                  = @clinic.accepts_referrals_via
              - if @clinic.responds_via.present?
                %p
                  %strong Responded to by:
                  = @clinic.responds_via

              - if @clinic.referral_form_mask == 1
                - referral_form_count = @clinic.referral_forms.reject{|referral_form| not referral_form.form.present?}.length
                %p
                  %strong Referral form:
                  Yes.
                %ul.referral_forms
                  - @clinic.referral_forms.each do |referral_form|
                    - next if not referral_form.form.present?
                    - type = referral_form.form_content_type.split('/').last
                    %li= link_to "#{referral_form.description} (#{type})", referral_form.form.url, :target => "_blank"
              - elsif @clinic.referral_form_mask == 2
                %p
                  %strong Referral form:
                  No.

              - if @clinic.required_investigations.present?
                %p.space
                  %strong Required information / investigations
                  for all referrals:
                  = @clinic.required_investigations.end_with_period.convert_newlines_to_br

              -if @clinic.waittime.present?
                %p.space
                  Average non-urgent patient wait time from referral to appointment:
                  %strong= @clinic.waittime

              -if @clinic.lagtime.present?
                %p
                  Average length of time to notify GP of a booking date:
                  %strong= @clinic.lagtime

              - @clinic.focuses.clinic_wait_time.each do |focus|

                - if focus.waittime.present? || focus.lagtime.present?
                  %p.space
                    %strong= "#{focus.procedure_specialization.procedure.full_name}:"

                  -if focus.waittime.present?
                    %p
                      Average non-urgent patient wait time from referral to appointment:
                      %strong= focus.waittime

                  -if focus.lagtime.present?
                    %p
                      Average length of time to notify GP of a booking date:
                      %strong= focus.lagtime

              - if @clinic.patient_can_book_mask == 1
                %p.space This office accepts direct calls from patients after referral to book their own appointments.
              - elsif @clinic.patient_can_book_mask == 2
                %p.space This office does not accept direct calls from patients after referral to book their own appointments.

            - if @clinic.red_flags.present? || @clinic.urgent_referrals_via.present?

              %h6 Urgent Referrals

              - if @clinic.urgent_referrals_via.present?
                %p
                  %strong Accepted by:
                  = @clinic.urgent_referrals_via

              - if @clinic.red_flags.present?
                %p
                  %strong Red flags
                  that this clinic feels warrants urgent consultation:
                  = @clinic.red_flags.end_with_period.convert_newlines_to_br

            - if @clinic.patient_instructions.present? || @clinic.cancellation_policy.present?
              %h6 Patient Information

              - if @clinic.patient_instructions.present?
                %p.space
                  %strong Patient instructions:
                  = @clinic.patient_instructions.end_with_period.convert_newlines_to_br

              - if @clinic.cancellation_policy.present?
                %p.space
                  %strong Cancellation policy:
                  = @clinic.cancellation_policy.end_with_period.convert_newlines_to_br

            - if @clinic.healthcare_providers.present?

              %h6 Healthcare providers

              %p
                %strong Healthcare providers
                ="who see patients at the clinic: #{@clinic.healthcare_providers.map{ |x| x.name }.join(", ")}"

            - clinic_attendances = @clinic.attendances.reject{ |attendance| attendance.clinic_location.blank? || attendance.clinic_location.empty? }

            - if clinic_attendances.length > 0

              %h6 Physicians who see patients at the clinic

              %ul
                - clinic_attendances.each do |attendance|
                  - if attendance.is_specialist
                    - if attendance.specialist && !attendance.specialist.not_available? && !attendance.specialist.in_progress
                      %li
                        %a.ajax{"href" => specialist_path(attendance.specialist)}= attendance.specialist.name
                        - if attendance.specialist.billing_number_padded.present?
                          = "- MSP ##{attendance.specialist.billing_number_padded}"
                        = "- #{attendance.area_of_focus}" if attendance.area_of_focus.present?
                  - elsif !attendance.freeform_name.blank?
                    %li
                      = attendance.freeform_name
                      = "- #{attendance.area_of_focus}" if attendance.area_of_focus.present?

        - if show_details  || show_areas_of_practice

          .span4.offsethalf
            - areas_of_practice_focused_results = {}
            - areas_of_practice_nonfocused_results = {}
            - specializations_with_results_count = 0
            - @clinic.specializations.each do |s|
              - areas_of_practice_focused_results[s.id] = compressed_procedures_indented(@clinic, ProcedureSpecialization::CLASSIFICATION_FOCUSED, s)
              - areas_of_practice_nonfocused_results[s.id] = compressed_procedures_indented(@clinic, ProcedureSpecialization::CLASSIFICATION_NONFOCUSED, s)
              - specializations_with_results_count += 1 if ((areas_of_practice_focused_results[s.id][1] > 0) || (areas_of_practice_nonfocused_results[s.id][1] > 0))

            - if specializations_with_results_count > 0 || @clinic.not_performed.present?
              .well.areas-of-practice
                %h6 Areas of Practice

                - @clinic.specializations.each do |s|
                  - focused_procedures, focused_count, focused_has_investigations = areas_of_practice_focused_results[s.id]
                  - nonfocused_procedures, nonfocused_count, nonfocused_has_investigations = areas_of_practice_nonfocused_results[s.id]

                  - next if focused_count == 0 && nonfocused_count == 0

                  - if specializations_with_results_count > 1
                    %strong.investigation-name= s.name

                  .investigation.space
                    - if focused_count > 0
                      - if focused_has_investigations
                        %p (with any additional details)
                      .list{:class => specializations_with_results_count > 1 && "indent"}
                        = focused_procedures.html_safe
                    - if nonfocused_count > 0
                      %p.space
                        %em Other areas of interest
                      - if nonfocused_has_investigations
                        %p (with any additional details)
                      .list{:class => specializations_with_results_count > 1 && "indent"}
                        = nonfocused_procedures.html_safe

                - if @clinic.not_performed.present?
                  %p.space
                    %strong Does not see or do
                  %p= @clinic.not_performed.end_with_period.convert_newlines_to_br

    #feedback
      .inner
        = simple_form_for @feedback, :html => { :class => "ajax feedback_form" } do |f|

          = f.input :feedback, :label => "Please provide us with any updates to #{@clinic.name}'s information"
          = f.input :item_type, :as => :hidden, :value => "Clinic"
          = f.input :item_id, :as => :hidden, :value => @clinic.name

          .form-actions
            %a.btn.btn-primary{:id => "sendFeedbackButton", "href" => "javascript:void(0)", "onclick" => "send_feedback($('form.feedback_form'))" }
              .before-click
                Send Feedback
              .after-click.hidden
                Sending
            %a.btn.btn-danger{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeOut(200)"} Cancel

    #feedback_thanks
      .inner
        %h2 Thank you!

        %p.space.no_indent= "Thank you for providing your feedback  on #{@clinic.name}. Your contributions help make Pathways a valuable resource for the community."

        %p.space.no_indent We will review your feedback in the near future and take action as necessary.

        %p.space.no_indent
          %a.btn.btn-primary{"href" => "javascript:void(0)", "onclick" => "$('#feedback_thanks').fadeOut(200)" } Close

    %script{"type" => "text/javascript"}
      :plain
        $(document).ready(function() {
          $('.tt').tooltip({trigger: 'manual'});
          $('#user_favorite_clinics_#{@clinic.id}').addClass('#{favorite_class}');
        });

        function send_feedback(form) {
          $("#sendFeedbackButton").addClass('disabled');
          $('.before-click').addClass('hidden');
          $('.after-click').removeClass('hidden');
          $.ajax({
              url: form.attr('action'),
              data: form.serialize(),
              type: 'POST'
          }).success(function(json) {
              $("#sendFeedbackButton").removeClass('disabled');
              $('.after-click').addClass('hidden');
              $('.before-click').removeClass('hidden');
              $('#feedback').fadeOut(200);
              $('#feedback_item_feedback').val('')
              $('#feedback_thanks').fadeIn(200);
          });
        }


  - if current_user_is_admin?
    - controlling_users = @clinic.controlling_users.uniq
    - if controlling_users.present?
      %h6 Users that can edit this clinic
      %ul
        - controlling_users.each do |user|
          %li
            = link_to user.name, user, :class => !user.active && "in-progress"
            - if !user.active
              (inactive)

    %h6 Review Queue Updates
    - review_items = ReviewItem.for_clinic(@clinic)
    %ul
      - if review_items.present?
        - review_items.sort{|a,b| b.created_at <=> a.created_at}.each do |review_item|
          %li
            = review_item.created_at.strftime('%B %d, %Y')
            - if review_item.no_updates?
              = "(#{ReviewItem::STATUS_HASH[review_item.status]})"
            - elsif review_item.archived?
              - if review_item.base_object.present?
                = link_to '(Re-review)', rereview_clinic_path(review_item.item, review_item_id: review_item.id)
            - else
              = link_to '(Review)', review_clinic_path(review_item.item, review_item_id: review_item.id)
      - else
        %li None

  .btn-group
    - if true || show_details
      - if clinic_locations.length == 1
        %a.btn{"href" => patient_information_clinic_path(@clinic), "target" => "_blank"}
          %i.icon-print.icon-text
          Print Information for Patient
      - else
        %a.btn.dropdown-toggle{"href" => "#", "data-toggle" => "dropdown"}
          %i.icon-print.icon-text
          Print Information for Patient
          %span.caret
        %ul.dropdown-menu
          - clinic_locations.each do |clinic_location|
            %li
              %a{"href" => clinic_patient_information_location_path(@clinic, clinic_location), "target" => "_blank"}
                = clinic_location.location.short_address
    - if !current_user_is_admin? && (can? :update, @clinic)
      %a.btn.btn-primary.ajax{"href" => clinic_self_edit_path(@clinic, @clinic.token)}
        %i.icon-pencil.icon-white
        Update #{@clinic.name}'s information
    - else
      %a.btn{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeIn(200)"}
        %i.icon-bullhorn.icon-text
        Incorrect Information? Let us know

  - if current_user_is_admin?

    %p.admin.btn-group

      - if @clinic.review_item.present?

        = link_to("<i class='icon-list-alt'></i>".html_safe + " Review Pending Changes", review_clinic_path(@clinic), :class => "btn ajax")

      - elsif can? :update, @clinic

        = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Clinic", edit_clinic_path(@clinic), :class => "btn ajax")
        = link_to("<i class='icon-file'></i>".html_safe + " Referral Forms", edit_referral_forms_path(parent_type: "Clinic", parent_id: @clinic.id), :class => "btn ajax")
        %a.btn{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#share"}
          %i.icon-share
          Share
        = link_to("<i class='icon-folder-open'></i>".html_safe + " History", clinic_versions_path(@clinic), :class => "btn ajax")

      - if can? :destroy, @clinic

        = link_to("<i class='icon-trash'></i>".html_safe + " Delete Clinic", @clinic, :confirm => "Delete #{@clinic.name}?", :method => :delete, :class => "btn")

  - if current_user_is_admin?
    #share.collapse
      %p
        .alert.alert-info
          %h3 Secret edit link
          %p Anyone can edit this clinic if they have the following secret address:
          %p= clinic_self_edit_path(@clinic, @clinic.token, :only_path => false)
