- set_page_specific_title @clinic.name

- unless current_user.as_introspective?
  - favorite_class = logged_in? ? (Favorite.find_by(user_id: current_user.id,
    favoritable_id: @clinic.id,
    favoritable_type: "Clinic").present? ? "icon-red" : "icon-text") : "icon-text"

  = render "partials/all_specialties_dropdown",
    specialization: dropdown_specialization(@clinic, current_user)

  - if @clinic.specializations.any?
    = render 'partials/specialization_nav',
      specialization: dropdown_specialization(@clinic, current_user),
      selected: 'clinics'

- show_details = false
- show_areas_of_practice = false
- clinic_locations = @clinic.clinic_locations.sort_by{ |cl| cl.created_at }.reject{ |cl| cl.empty? }

:javascript
  window.pathways.introspectiveUser = #{current_user.as_introspective?};

.content-wrapper

  - if @is_version
    = render 'versions/info', instance_name: "clinic"

  - cache(clinic_path(@clinic)) do
    .content
      .row
        .span7half
          .headline-header
          .headline

            %h2.profile_header__title{ class: (@clinic.hidden? ? "hidden-from-users" : "") }
              = @clinic.name
              %a{ href: "javascript:void(0)",
                onclick: "favorite('clinics',#{@clinic.id},'#{escape_javascript(@clinic.name)}')",
                title: "Favourite / un-favourite" }
                %i.icon-heart{ id: "user_favorite_clinics_#{@clinic.id}" }
            - if @clinic.hidden?
              %h5= " (Hidden from users)"

            %h3.specialty_links
              = @clinic.specializations.map{ |s| "<a href='#{specialization_path(s)}'>#{s.name}</a>" }.to_sentence.html_safe

            %p.space.no_indent
              %i{ class: @clinic.status_class }
              - if @clinic.not_responded?

                %strong
                  This clinic has not yet provided Pathways their information.

              - elsif @clinic.closed?

                %strong This clinic has closed.

              - elsif @clinic.purposely_not_yet_surveyed?

                - show_areas_of_practice = true

                %strong
                  This clinic has purposely not yet been surveyed by Pathways.
                %p
                  It may be out of our current catchment area, or in a
                  speciality we have yet to fully survey.

                - if @clinic.specialists.present?
                  %p.space.no_indent.attending_specialists
                    %strong Specialists that work in this clinic:
                    != specialists_who_work_in(@clinic)

              - else

                - show_details = true
                - show_areas_of_practice = true

                %strong.status= @clinic.status.end_with_period
                - if @clinic.status_details.present?
                  %p.no_indent
                    %strong Details:
                    = @clinic.status_details.end_with_period.convert_newlines_to_br
                - if @clinic.limitations.present?
                  %p.no_indent
                    %strong Limitations:
                    = @clinic.limitations.end_with_period.convert_newlines_to_br

          .headline-footer

          - if show_details

            - if clinic_locations.present? || @clinic.languages.present? || @clinic.interpreter_available

              %h6 Clinic Information

              - clinic_locations.each do |cl|
                - address = cl.resolved_address

                %p.space
                  %strong= cl.phone_only if cl.phone_only.present?
                %p= "Fax: #{cl.fax}" if cl.fax.present?
                %p= "Public e-mail (okay for patient use): #{mail_to cl.public_email, cl.public_email, target: '_blank'}".html_safe if cl.public_email.present?
                %p= "Private e-mail (for physician office use only): #{mail_to cl.email, cl.email, target: '_blank'}".html_safe if cl.email.present?
                %p= "Website: #{link_to cl.url, cl.url, target: '_blank'}".html_safe if cl.url.present?
                %p= cl.contact_details.convert_newlines_to_br if cl.contact_details.present?
                - if cl.location.present? && cl.location.in_hospital?
                  - hospital = cl.location.hospital_in
                  %p
                    = "In #{link_to hospital.name, hospital_path(hospital)}".html_safe
                    = "(#{cl.sector})" if cl.sector_info_available?
                  %p
                    = link_to address.address,
                      address.map_url,
                      target: "_blank" if address.present? && !address.empty?
                  %p= cl.location.in_details if cl.location.in_details.present?
                - elsif address.present? && !address.empty?
                  %p= "(#{cl.sector})" if cl.sector_info_available?
                  %p= link_to address.address, address.map_url, target: "_blank"
                - if cl.location_opened.present?
                  %p
                    This clinic opened at this location
                    = cl.location_opened == "Prior to 2010" ? "prior to 2010." : "in #{cl.location_opened}."
                %p= "Wheelchair accessible." if cl.wheelchair_accessible?
                - if cl.scheduled?
                  %p
                    %strong Schedule:
                    = cl.schedule.collapsed_days_and_hours.join(". ").end_with_period

              - if @clinic.languages.present?
                %p.space.languages
                  = @clinic.languages.map{ |x| "<a href='#{language_path(x)}'>#{x.name}</a>" }.to_sentence.html_safe
                  = "#{@clinic.languages.count == 1 ? 'is' : 'are' } spoken at this clinic."

              - if @clinic.interpreter_available
                %p
                  Interpreter available upon request.

            - if @clinic.accepts_referrals_via.present? || @clinic.responds_via.present? || @clinic.referral_form_mask != 3  || @clinic.required_investigations.present? || @clinic.waittime.present? || @clinic.lagtime.present? || @clinic.patient_can_book_mask != 3

              %h6 Referrals

              - if @clinic.accepts_referrals_via.present?
                %p
                  %strong Accepted by:
                  = @clinic.accepts_referrals_via
              - if @clinic.responds_via.present?
                %p
                  %strong Responded to by:
                  = @clinic.responds_via

              - if @clinic.referral_form_mask == 1
                - referral_form_count = @clinic.referral_forms.reject{|referral_form| not referral_form.form.present?}.length
                %p
                  %strong Referral form:
                  Yes.
                %ul.referral_forms
                  - @clinic.referral_forms.each do |referral_form|
                    - next if not referral_form.form.present?
                    - type = referral_form.form_content_type.split('/').last
                    %li
                      = link_to "#{referral_form.description} (#{type})",
                        referral_form.form.url,
                        target: "_blank",
                        onclick: "window.pathways.trackForm(_gaq, #{referral_form.id})"
              - elsif @clinic.referral_form_mask == 2
                %p
                  %strong Referral form:
                  No.

              - if @clinic.required_investigations.present?
                %p.space
                  %strong Required information / investigations
                  for all referrals:
                  = @clinic.required_investigations.end_with_period.convert_newlines_to_br
              - if @clinic.show_waittimes?
                -if @clinic.waittime.present?
                  %p.space
                    Average non-urgent patient wait time from referral to
                    appointment:
                    %strong= @clinic.waittime

                -if @clinic.lagtime.present?
                  %p
                    Average length of time to notify GP of a booking date:
                    %strong= @clinic.lagtime

                - @clinic.focuses.clinic_wait_time.each do |focus|

                  - if focus.waittime.present? || focus.lagtime.present?
                    %p.space
                      %strong
                        = "#{focus.procedure_specialization.procedure.full_name}:"

                    -if focus.waittime.present?
                      %p
                        Average non-urgent patient wait time from referral to
                        appointment:
                        %strong= focus.waittime

                    -if focus.lagtime.present?
                      %p
                        Average length of time to notify GP of a booking date:
                        %strong= focus.lagtime

              - if @clinic.patient_can_book_mask == 1
                %p.space
                  This office accepts direct calls from patients after referral
                  to book their own appointments.
              - elsif @clinic.patient_can_book_mask == 2
                %p.space
                  This office does not accept direct calls from patients after
                  referral to book their own appointments.

            - if @clinic.red_flags.present? || @clinic.urgent_referrals_via.present?

              %h6 Urgent Referrals

              - if @clinic.urgent_referrals_via.present?
                %p
                  %strong Accepted by:
                  = @clinic.urgent_referrals_via

              - if @clinic.red_flags.present?
                %p
                  %strong Red flags
                  that this clinic feels warrants urgent consultation:
                  = @clinic.red_flags.end_with_period.convert_newlines_to_br

            - if @clinic.teleservices.any?(&:offered?)
              = render "teleservices/index", provider: @clinic

            - if @clinic.patient_instructions.present? || @clinic.cancellation_policy.present?
              %h6 Patient Information

              - if @clinic.patient_instructions.present?
                %p.space
                  %strong Patient instructions:
                  = @clinic.patient_instructions.end_with_period.convert_newlines_to_br

              - if @clinic.cancellation_policy.present?
                %p.space
                  %strong Cancellation policy:
                  = @clinic.cancellation_policy.end_with_period.convert_newlines_to_br

            - if @clinic.healthcare_providers.present?

              %h6 Healthcare providers

              %p
                %strong Healthcare providers
                who see patients at the clinic:
                = @clinic.healthcare_providers.ordered_by_name.map{ |x| x.name }.join(", ")

            - if @clinic.visible_attendances.any?

              %h6 Physicians who see patients at the clinic

              %ul.attending_specialists
                - @clinic.visible_attendances.each do |attendance|
                  - if attendance.is_specialist
                    = physician_attending(attendance)
                  - else
                    %li
                      = attendance.freeform_name
                      = "- #{attendance.area_of_focus}" if attendance.area_of_focus.present?

        - if show_details || show_areas_of_practice

          .span4.offsethalf
            - areas_of_practice_focused_results = {}
            - areas_of_practice_nonfocused_results = {}
            - specializations_with_results_count = 0
            - @clinic.specializations.each do |s|
              - areas_of_practice_focused_results[s.id] = compressed_procedures_indented(@clinic,
                ProcedureSpecialization::CLASSIFICATION_FOCUSED, s)
              - areas_of_practice_nonfocused_results[s.id] = compressed_procedures_indented(@clinic,
                ProcedureSpecialization::CLASSIFICATION_NONFOCUSED, s)
              - specializations_with_results_count += 1 if ((areas_of_practice_focused_results[s.id][1] > 0) || (areas_of_practice_nonfocused_results[s.id][1] > 0))

            - if specializations_with_results_count > 0 || @clinic.not_performed.present?
              .well.areas-of-practice
                %h6 Areas of Practice

                - @clinic.specializations.each do |s|
                  - focused_procedures,
                    focused_count,
                    focused_has_investigations = areas_of_practice_focused_results[s.id]
                  - nonfocused_procedures,
                    nonfocused_count,
                    nonfocused_has_investigations = areas_of_practice_nonfocused_results[s.id]

                  - next if focused_count == 0 && nonfocused_count == 0

                  - if specializations_with_results_count > 1
                    %strong.investigation-name= s.name

                  .investigation.space
                    - if focused_count > 0
                      - if focused_has_investigations
                        %p (with any additional details)
                      .list{ class: specializations_with_results_count > 1 && "indent" }
                        = focused_procedures.html_safe
                    - if nonfocused_count > 0
                      %p.space
                        %em Other areas of interest
                      - if nonfocused_has_investigations
                        %p (with any additional details)
                      .list{ class: specializations_with_results_count > 1 && "indent" }
                        = nonfocused_procedures.html_safe

                - if @clinic.not_performed.present?
                  %p.space
                    %strong Does not see or do
                  %p= @clinic.not_performed.end_with_period.convert_newlines_to_br

  :javascript
    var stripLinks = function(selections){
      selections.each(function(){
        $(this).replaceWith($(this).text());
      });
    };
    $(document).ready(function() {
      $('.tt').tooltip({trigger: 'manual'});
      $('#user_favorite_clinics_#{@clinic.id}').addClass('#{favorite_class}');
      if (window.pathways.introspectiveUser){
        $("a[title=\"Favourite / un-favourite\"]").remove();
        stripLinks($('.specialty_links > a'));
        stripLinks($('.languages > a'));
        stripLinks($('.areas-of-practice a'));
        stripLinks($('.attending_specialists a'));
      }
    });

  - if current_user.as_admin_or_super?
    - if @clinic.user_controls_clinics.any?
      %h6 Users that can edit this clinic
      %ul
        - @clinic.user_controls_clinics.each do |control|
          %li
            = link_to control.user.name,
              control.user,
              class: (!control.user.active && "hidden-from-users")
            - if !control.last_visited.nil?
              %span= "(Last Visited #{control.last_visited.strftime("%B %-d, %Y")}.)"
            - if !control.user.active
              %span= "(inactive)"

    %h6 Review Queue Updates
    - review_items = ReviewItem.for_clinic(@clinic)
    %ul
      - if review_items.present?
        - review_items.sort{|a,b| b.created_at <=> a.created_at}.each do |review_item|
          %li
            = review_item.created_at.strftime('%B %d, %Y')
            - if review_item.no_updates?
              = "(#{ReviewItem::STATUS_HASH[review_item.status]})"
            - elsif review_item.archived?
              - if review_item.base_object.present?
                = link_to '(Re-review)',
                  rereview_clinic_path(review_item.item,
                  review_item_id: review_item.id)
            - else
              = link_to '(Review)',
                review_clinic_path(review_item.item,
                review_item_id: review_item.id)
      - else
        %li None

  .btn-group
    - if clinic_locations.length == 1
      %a.btn{ href: clinic_location_information_path(@clinic,
        clinic_locations.first),
        target: "_blank" }
        %i.icon-print.icon-text
        Print Information for Patient
    - else
      %a.btn.dropdown-toggle{ href: "#", data: { toggle: "dropdown" } }
        %i.icon-print.icon-text
        Print Information for Patient
        %span.caret
      %ul.dropdown-menu
        - clinic_locations.each do |clinic_location|
          %li
            %a{ href: clinic_location_information_path(@clinic,
              clinic_location),
              target: "_blank" }
              = clinic_location.location.short_address

    - if !current_user.as_admin_or_super? && (can? :update, @clinic)
      %a.btn.btn-primary{ href: clinic_self_edit_path(@clinic, @clinic.token) }
        %i.icon-pencil.icon-white
        Update #{@clinic.name}'s information
    - else
      %a.btn{ href: "javascript:void(0)",
        onclick: open_feedback_modal(@clinic) }
        %i.icon-bullhorn.icon-text
        Incorrect Information? Let us know

  - if current_user.as_admin_or_super?

    %p.admin.btn-group

      - if @clinic.review_item.present?

        = link_to review_clinic_path(@clinic), class: "btn" do
          %i.icon-list-alt
          Review Pending Changes

      - elsif can? :update, @clinic

        = link_to edit_clinic_path(@clinic), class: "btn" do
          %i.icon-pencil
          Edit Clinic
        = link_to edit_referral_forms_path(parent_type: "Clinic",
          parent_id: @clinic.id),
          class: "btn" do
          %i.icon-file
          Referral Forms
        %a.btn{ href: "javascript:void(0)",
          data: { toggle: "collapse", target: "#share" } }
          %i.icon-share
          Share
      - if can? :view_history, @clinic
        = large_history_button(@clinic)

      - if can? :destroy, @clinic
        = delete_button(clinic_path(@clinic), "Delete #{@clinic.name}?")

  - if current_user.as_admin_or_super?
    #share.collapse

    :javascript
      window.pathways.attachSecretEditLinks({
        containerId: "share",
        props: {
          addLink: '#{secret_tokens_path}',
          accessibleId: #{@clinic.id},
          accessibleType: "Clinic",
          links: #{@clinic.valid_secret_edit_links(current_user).to_json},
          currentUserName: "#{@current_user.name}",
          canEdit: #{can?(:edit, @clinic)},
          modal: { isVisible: false }
        }
      })

  - if current_user.as_admin_or_super? && !current_user.as_super_admin?
    .alert.alert-info{ style: "margin-top: 10px" }
      If you would like to have this clinic deleted, please contact a
      provincial administrator.
